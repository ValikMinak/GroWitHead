{"version":3,"sources":["Components/Learning/Layout/ListLayout.js","SVG/SVG.js","Functions.js","Components/Learning/Category.js","Components/Learning/Subjects.js","Components/Styled/ShowHideLearnText/ShowHideLearnText.js","Components/Learning/Text/TextItem.js","Components/Learning/Text/Text.js","Reducers/LearningReducer.js","Components/Learning/Learning.js","Components/Styled/TodoItemStyled/CardNameStyled.js","Components/Todo/TodoCard.js","Components/Todo/TodoColumn.js","Components/Todo/TodoBoard.js","Components/Todo/Todo.js","Components/MainPage/MainPage.js","Components/App/App.js","index.js"],"names":["replaced","name","space","replace","ListLayout","newItem","inputValue","setInputValue","addItem","inputRef","useRef","useEffect","current","select","className","SwitchTransition","component","CSSTransition","key","timeout","appear","classNames","maxLength","type","ref","autoFocus","value","onKeyDown","e","onChange","target","Close","width","height","viewBox","d","fill","ResizeShow","ResizeHide","EditDone","Home","xmlns","opacity","fillOpacity","DeleteColumn","Delete","IsDone","Done","IsImportant","Important","ShowBoards","closeInput","setNewItem","nodeName","handleDragEnd","dispatch","item","draggableId","destination","subjectId","itemCopy","find","i","id","payload","subjectCopy","finishIndex","index","categoryCopy","idCategory","Category","memo","subject","useState","newCategory","setNewCategory","addCategory","length","innerHTML","categoryId","onClick","onDragEnd","source","droppableId","category","provided","innerRef","droppableProps","map","provider","draggableProps","dragHandleProps","style","backgroundColor","color","to","idSubject","colors","Subjects","subjects","newSubject","setNewSubject","addSubject","subjectName","subjectColor","Math","floor","random","SectionTextStyles","styled","div","show","props","textAdded","SectionText","children","TextItem","text","setText","focusText","setFocusText","setShow","textId","categoryTextChanged","spellCheck","onFocus","idText","Text","newCategoryTextTitle","setNewCategoryTextTitle","addCategoryText","learningReducer","state","filter","remainingSubjects","slice","remainCategories","newCategoriesPosition","withRouter","match","params","useReducer","TransitionGroup","exit","path","render","CardNameStyles","span","important","done","CardNameStyled","TodoCard","card","deleteCard","importantCard","cardDone","change","setChange","changeInputValue","setChangeInputValue","changeInputRef","focus","changeCardName","deleteItem","setImportant","setDone","onDoubleClick","onBlur","cardId","TodoColumn","board","boardList","column","setNewBoard","deleteColumn","addImportantDone","isImportant","importantCardId","isDone","doneCardId","boardListItem","columns","columnsItem","cards","inputCardValue","setInputCardValue","addCard","setAddCard","changeColumnValue","setColumnValue","newColumnName","setNewColumnName","columnNameRef","columnCardNameRef","addNewCard","undefined","changeColumnName","columnId","cursor","placeholder","listId","TodoBoard","addList","setAddList","isActiveBoard","isChangeBoardName","activeBoardName","changeBoardName","setActiveBoardId","newColumnNameRef","addAnotherColumn","prev","b","splice","boardId","Todo","history","showBoards","setShowBoard","boardNameValue","setBoardNameValue","setBoard","setActiveBoardName","activeBoardId","setChangeBoardName","createCardInputRef","changeBoardNameRef","addNewBoard","boardName","push","toLowerCase","parentNode","closeCreateInput","activeClassName","MainPage","src","alt","App","exact","Learning","ReactDOM","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.581080fa.chunk.js","sourcesContent":["import React, {useEffect, useRef} from 'react';\r\nimport '../Style.scss'\r\nimport {CSSTransition, SwitchTransition} from \"react-transition-group\";\r\n\r\n\r\nexport const replaced = (name, space) => {\r\n    return name.replace(/\\s+/g, space ? ' ' : '')\r\n};\r\n\r\nconst ListLayout = ({newItem, inputValue, setInputValue, addItem}) => {\r\n\r\n    const inputRef = useRef();\r\n    useEffect(() => {\r\n        inputRef.current && inputRef.current.select()\r\n    },[newItem]);\r\n    return (\r\n        <div className='learningList__item'>\r\n            <div className=\"learningList__add\">\r\n                {newItem\r\n                && <SwitchTransition component={false}>\r\n                    <CSSTransition key={true} timeout={300} appear={true} classNames={'animInput'}>\r\n                        <input maxLength={20} type=\"text\" ref={inputRef} autoFocus={true} value={inputValue}\r\n                               onKeyDown={(e) => {\r\n                                   addItem(e)\r\n                               }}\r\n                               onChange={(e) => setInputValue(replaced(e.target.value, true))}/>\r\n                    </CSSTransition>\r\n                </SwitchTransition>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ListLayout;","import React from \"react\";\r\n//Learning\r\nexport const Close = ({width, height}) => {\r\n    return (\r\n        <svg height={height} viewBox=\"0 0 512 512\" width={width}>\r\n            <path\r\n                d=\"m347.429688 365.714844c-4.679688 0-9.359376-1.785156-12.929688-5.359375l-182.855469-182.855469c-7.144531-7.144531-7.144531-18.714844 0-25.855469 7.140625-7.140625 18.714844-7.144531 25.855469 0l182.855469 182.855469c7.144531 7.144531 7.144531 18.714844 0 25.855469-3.570313 3.574219-8.246094 5.359375-12.925781 5.359375zm0 0\"\r\n                fill=\"black\"/>\r\n            <path\r\n                d=\"m164.570312 365.714844c-4.679687 0-9.355468-1.785156-12.925781-5.359375-7.144531-7.140625-7.144531-18.714844 0-25.855469l182.855469-182.855469c7.144531-7.144531 18.714844-7.144531 25.855469 0 7.140625 7.140625 7.144531 18.714844 0 25.855469l-182.855469 182.855469c-3.570312 3.574219-8.25 5.359375-12.929688 5.359375zm0 0\"\r\n                fill=\"black\"/>\r\n        </svg>\r\n\r\n    )\r\n};\r\nexport const ResizeShow = ({width, height}) => {\r\n    return (\r\n        <svg height={height} viewBox=\"0 0 512 512\" width={width}>\r\n            <path d=\"M492,0H344.212c-11.046,0-20,8.954-20,20s8.954,20,20,20h99.503L283.394,200.322c-7.811,7.811-7.811,20.474,0,28.284\r\n                         c7.81,7.81,20.473,7.811,28.284,0L472,68.284v99.503c0,11.046,8.954,20,20,20c11.046,0,20-8.954,20-20V20\r\n                         C512,9.115,503.154,0,492,0z\"/>\r\n            <path d=\"M228.606,283.394c-7.811-7.81-20.474-7.811-28.284,0L40,443.716v-99.503c0-11.046-8.954-20-20-20s-20,8.954-20,20V492\r\n                         c0,10.866,8.853,20,20,20h147.788c11.046,0,20-8.954,20-20c0-11.046-8.954-20-20-20H68.284l160.322-160.322\r\n                         C236.417,303.867,236.417,291.204,228.606,283.394z\"/>\r\n        </svg>\r\n    )\r\n};\r\nexport const ResizeHide = ({width, height}) => {\r\n    return (\r\n        <svg height={height} viewBox=\"0 0 512 512\" width={width}>\r\n            <path\r\n                d=\"M297.536 234.464L445.324 234.464C456.37 234.464 465.324 225.51 465.324 214.464C465.324 203.418 456.37 194.464 445.324 194.464L345.821 194.464L506.142 34.1419C513.953 26.3309 513.953 13.6679 506.142 5.85789C498.332 -1.95211 485.669 -1.95311 477.858 5.85789L317.536 166.18L317.536 66.6769C317.536 55.6309 308.582 46.6769 297.536 46.6769C286.49 46.6769 277.536 55.6309 277.536 66.6769L277.536 214.464C277.536 225.349 286.382 234.464 297.536 234.464Z\"\r\n                fill=\"black\"/>\r\n            <path\r\n                d=\"M5.85835 506.142C13.6694 513.952 26.3323 513.953 34.1423 506.142L194.464 345.82L194.464 445.323C194.464 456.369 203.418 465.323 214.464 465.323C225.51 465.323 234.464 456.369 234.464 445.323L234.464 297.536C234.464 286.67 225.611 277.536 214.464 277.536L66.6763 277.536C55.6303 277.536 46.6763 286.49 46.6763 297.536C46.6763 308.582 55.6303 317.536 66.6763 317.536L166.18 317.536L5.85835 477.858C-1.95265 485.669 -1.95265 498.332 5.85835 506.142Z\"\r\n                fill=\"black\"/>\r\n        </svg>\r\n\r\n\r\n    )\r\n};\r\nexport const EditDone = ({width, height}) => {\r\n    return (\r\n        <svg height={height} viewBox=\"0 0 512 512\" width={width}>\r\n            <path d=\"M36.573,309.292h2.09l100.833-21.943c1.964-0.327,3.784-1.237,5.224-2.612L315.56,113.896\r\n    c12.48-12.453,19.443-29.391,19.331-47.02c0.023-17.766-6.917-34.833-19.331-47.543C303.108,6.853,286.17-0.11,268.54,0.003\r\n    c-17.742-0.157-34.76,7.028-47.02,19.853L51.201,190.696c-1.502,1.209-2.597,2.85-3.135,4.702L26.124,296.231\r\n    c-0.599,3.62,0.565,7.308,3.135,9.927C31.188,308.126,33.817,309.253,36.573,309.292z M268.54,20.901\r\n    c25.103-0.002,45.454,20.347,45.456,45.45c0,0.175-0.001,0.35-0.003,0.525c0.171,11.959-4.547,23.47-13.061,31.869\r\n    l-64.261-64.784C245.137,25.548,256.604,20.848,268.54,20.901z M222.042,49.113l64.261,64.261L137.405,261.749l-64.261-63.739\r\n    L222.042,49.113z M64.785,218.909l51.722,51.722L50.156,285.26L64.785,218.909z\"/>\r\n            <path d=\"M368.328,365.717H18.287c-5.771,0-10.449,4.678-10.449,10.449s4.678,10.449,10.449,10.449h350.041\r\n    c5.771,0,10.449-4.678,10.449-10.449S374.099,365.717,368.328,365.717z\"/>\r\n        </svg>\r\n\r\n    )\r\n};\r\n\r\n\r\n//Todo\r\n\r\n\r\nexport const Home = ({width, height}) => {\r\n\r\n    return (\r\n        <svg width={width} height={height} viewBox=\"0 0 86 27\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path opacity=\"0.7\"\r\n                  d=\"M52.1714 20V9.43115H49.9595V13.7231H45.1987V9.43115H42.9868V20H45.1987V15.5469H49.9595V20H52.1714ZM58.6973 9.24805C55.5625 9.24805 53.5996 11.3501 53.5996 14.7192C53.5996 18.0811 55.5625 20.1758 58.6973 20.1758C61.8247 20.1758 63.7949 18.0811 63.7949 14.7192C63.7949 11.3501 61.8247 9.24805 58.6973 9.24805ZM58.6973 11.0938C60.4258 11.0938 61.5317 12.5 61.5317 14.7192C61.5317 16.9312 60.4258 18.3301 58.6973 18.3301C56.9614 18.3301 55.8555 16.9312 55.8555 14.7192C55.8555 12.5 56.9688 11.0938 58.6973 11.0938ZM76.4146 20V9.43115H73.8511L70.8481 17.019H70.7896L67.7866 9.43115H65.2231V20H67.1934V12.8662H67.252L70.123 20H71.5146L74.3857 12.8662H74.4443V20H76.4146ZM85.1743 18.1689H80.3843V15.5029H84.9033V13.8037H80.3843V11.2549H85.1743V9.43115H78.1724V20H85.1743V18.1689Z\"\r\n                  fill=\"white\"/>\r\n            <path\r\n                d=\"M3.07812 13.4385C3.07812 14.2119 3.70117 14.792 4.52832 14.792C4.95801 14.792 5.34473 14.5986 5.66699 14.3086L16.7422 4.15723C16.8174 4.08203 16.8926 4.0498 17 4.0498C17.0859 4.0498 17.1826 4.08203 17.2578 4.15723L28.333 14.3086C28.6445 14.5986 29.0312 14.792 29.4717 14.792C30.2881 14.792 30.9219 14.2119 30.9219 13.4385C30.9219 13.0303 30.8145 12.665 30.374 12.2676L26.1846 8.44336V1.72949C26.1846 1.23535 25.8623 0.913086 25.3682 0.913086H23.0264C22.5322 0.913086 22.1885 1.23535 22.1885 1.72949V4.80176L18.9336 1.82617C18.3428 1.28906 17.6982 1.02051 16.9893 1.02051C16.2803 1.02051 15.6465 1.28906 15.0557 1.82617L3.61523 12.2676C3.18555 12.665 3.07812 13.0303 3.07812 13.4385ZM7.1709 22.5371C7.1709 24.1699 8.2666 25.2119 10.0176 25.2119H14.1211V17.2627C14.1211 16.7471 14.4541 16.4141 14.9697 16.4141H19.041C19.5566 16.4141 19.8789 16.7471 19.8789 17.2627V25.2119H23.9932C25.7334 25.2119 26.8398 24.1699 26.8398 22.5371V14.835L17.2578 6.1123C17.1719 6.03711 17.0859 5.99414 17 5.99414C16.9033 5.99414 16.8066 6.03711 16.7314 6.1123L7.1709 14.8672V22.5371Z\"\r\n                fill=\"white\" fillOpacity=\"0.7\"/>\r\n        </svg>\r\n    )\r\n};\r\nexport const DeleteColumn = () => {\r\n    return (\r\n        <svg width=\"14\" height=\"12\" viewBox=\"0 0 14 12\" fill=\"none\">\r\n            <path opacity=\"0.7\"\r\n                  d=\"M11.2305 11.4004C12.5781 11.4004 13.3223 10.8027 13.3223 9.46094V2.23633C13.3223 0.894531 12.5781 0.15625 11.2305 0.15625H6.21484C5.22461 0.15625 4.68555 0.378906 4.06445 1.09375L1.0293 4.48633C0.507812 5.07812 0.367188 5.39453 0.367188 5.76953C0.367188 6.15039 0.519531 6.47266 1.0293 7.06445L4.07031 10.4395C4.69727 11.1602 5.22461 11.3945 6.21484 11.3945L11.2305 11.4004ZM9.90625 8.47656C9.70703 8.47656 9.54883 8.41797 9.4082 8.27148L7.90234 6.74805L6.39648 8.27148C6.25586 8.41797 6.09766 8.47656 5.89844 8.47656C5.51172 8.47656 5.19531 8.1543 5.19531 7.77344C5.19531 7.57422 5.25977 7.41602 5.40625 7.26953L6.90625 5.76953L5.40625 4.27539C5.25977 4.12891 5.19531 3.9707 5.19531 3.77148C5.19531 3.38477 5.51172 3.0625 5.89844 3.0625C6.0918 3.0625 6.25586 3.12109 6.40234 3.26758L7.90234 4.78516L9.40234 3.26758C9.54883 3.12109 9.71289 3.0625 9.90625 3.0625C10.293 3.0625 10.6094 3.38477 10.6094 3.77148C10.6094 3.9707 10.5449 4.12891 10.3984 4.27539L8.89844 5.76953L10.3984 7.26953C10.5449 7.41602 10.6094 7.57422 10.6094 7.77344C10.6094 8.1543 10.293 8.47656 9.90625 8.47656Z\"\r\n                  fill=\"black\"/>\r\n        </svg>\r\n\r\n    )\r\n};\r\nexport const Delete = ({height, width}) => {\r\n    return (\r\n        <svg width={width} height={height} viewBox=\"0 0 13 13\">\r\n            <path d=\"M6.5 12.7461C9.76953 12.7461 12.4766 10.0391 12.4766 6.76953C12.4766 3.50586 9.76367 0.792969 6.49414 0.792969C3.23047 0.792969 0.523438 3.50586 0.523438 6.76953C0.523438 10.0391 3.23633 12.7461 6.5 12.7461ZM6.5 11.75C3.73438 11.75 1.52539 9.53516 1.52539 6.76953C1.52539 4.00977 3.72852 1.78906 6.49414 1.78906C9.25977 1.78906 11.4746 4.00977 11.4805 6.76953C11.4863 9.53516 9.26562 11.75 6.5 11.75ZM5.06445 10.2617H7.93555C8.3457 10.2617 8.5918 10.0332 8.60938 9.61719L8.82617 4.83594H9.16602C9.32422 4.83594 9.45898 4.70117 9.45898 4.54297C9.45898 4.37891 9.32422 4.25 9.16602 4.25H7.8418V3.77539C7.8418 3.31836 7.53711 3.03125 7.10352 3.03125H5.87891C5.44531 3.03125 5.14648 3.31836 5.14648 3.77539V4.25H3.81641C3.6582 4.25 3.5293 4.37891 3.5293 4.54297C3.5293 4.70117 3.6582 4.83594 3.81641 4.83594H4.16797L4.38477 9.61719C4.4082 10.0332 4.64844 10.2617 5.06445 10.2617ZM5.73242 4.25V3.88672C5.73242 3.72852 5.84375 3.62305 6.00195 3.62305H6.96875C7.13281 3.62305 7.24414 3.72852 7.24414 3.88672V4.25H5.73242ZM5.41016 9.61719C5.28125 9.61719 5.19336 9.52344 5.1875 9.38281L5.0293 5.45117C5.02344 5.31641 5.12305 5.2168 5.26953 5.2168C5.39844 5.2168 5.49219 5.31055 5.49805 5.45117L5.63867 9.37695C5.64453 9.51758 5.55664 9.61719 5.41016 9.61719ZM6.49414 9.61133C6.34766 9.61133 6.25391 9.51758 6.25391 9.37695V5.45117C6.25391 5.31641 6.34766 5.2168 6.49414 5.2168C6.63477 5.2168 6.73438 5.31641 6.73438 5.45117V9.37695C6.73438 9.51758 6.63477 9.61133 6.49414 9.61133ZM7.57227 9.61719C7.42578 9.61719 7.33789 9.51758 7.34375 9.37695L7.48438 5.45117C7.49023 5.31055 7.58398 5.2168 7.71875 5.2168C7.85938 5.2168 7.95898 5.31641 7.95312 5.45117L7.79492 9.38281C7.78906 9.52344 7.70117 9.61719 7.57227 9.61719Z\" fill=\"#202020\" fillOpacity=\"0.5\"/>\r\n        </svg>\r\n    )\r\n};\r\nexport const IsDone = ({height, width}) => {\r\n    return (\r\n        <svg width={width} height={height} viewBox=\"0 0 13 13\">\r\n            <path d=\"M6.5 12.7461C9.76953 12.7461 12.4766 10.0391 12.4766 6.76953C12.4766 3.50586 9.76367 0.792969 6.49414 0.792969C3.23047 0.792969 0.523438 3.50586 0.523438 6.76953C0.523438 10.0391 3.23633 12.7461 6.5 12.7461ZM6.5 11.75C3.73438 11.75 1.52539 9.53516 1.52539 6.76953C1.52539 4.00977 3.72852 1.78906 6.49414 1.78906C9.25977 1.78906 11.4746 4.00977 11.4805 6.76953C11.4863 9.53516 9.26562 11.75 6.5 11.75ZM5.76172 9.69922C5.95508 9.69922 6.11328 9.60547 6.23633 9.42383L9.13086 4.87109C9.20703 4.75391 9.27148 4.61914 9.27148 4.49023C9.27148 4.2207 9.03711 4.05664 8.79102 4.05664C8.63867 4.05664 8.48633 4.14453 8.38086 4.32031L5.73828 8.55664L4.37891 6.79883C4.24414 6.62305 4.10352 6.55859 3.94531 6.55859C3.6875 6.55859 3.48242 6.76953 3.48242 7.0332C3.48242 7.16211 3.53516 7.28516 3.62305 7.39648L5.25781 9.42383C5.41602 9.61719 5.56836 9.69922 5.76172 9.69922Z\" fill={\"#202020\"} fillOpacity={\"0.5\"}/>\r\n        </svg>\r\n\r\n    )\r\n};\r\nexport const Done = ({height, width}) => {\r\n    return (\r\n        <svg width={width} height={height} viewBox=\"0 0 13 13\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path\r\n                d=\"M6.5 12.7461C9.76953 12.7461 12.4766 10.0391 12.4766 6.76953C12.4766 3.50586 9.76367 0.792969 6.49414 0.792969C3.23047 0.792969 0.523438 3.50586 0.523438 6.76953C0.523438 10.0391 3.23633 12.7461 6.5 12.7461ZM5.69727 9.77539C5.49805 9.77539 5.33984 9.6875 5.17578 9.48828L3.48242 7.40234C3.39453 7.29102 3.3418 7.15039 3.3418 7.02148C3.3418 6.74609 3.55859 6.53516 3.82227 6.53516C3.98633 6.53516 4.13281 6.59961 4.26758 6.78125L5.66797 8.5918L8.39258 4.22656C8.50391 4.04492 8.65625 3.95703 8.81445 3.95703C9.07227 3.95703 9.31836 4.12695 9.31836 4.4082C9.31836 4.53711 9.24219 4.67773 9.17188 4.79492L6.18945 9.48828C6.06055 9.68164 5.89648 9.77539 5.69727 9.77539Z\"\r\n                fill=\"black\"/>\r\n        </svg>\r\n    )\r\n};\r\nexport const IsImportant = ({height, width}) => {\r\n    return (\r\n        <svg width={width} height={height} viewBox=\"0 0 14 13\">\r\n            <path d=\"M2.98633 12.8281C3.22656 13.0156 3.53125 12.9512 3.89453 12.6875L6.99414 10.4082L10.0996 12.6875C10.4629 12.9512 10.7617 13.0156 11.0078 12.8281C11.248 12.6465 11.3008 12.3477 11.1543 11.9258L9.92969 8.27539L13.0586 6.03125C13.4219 5.77344 13.5684 5.49805 13.4746 5.21094C13.3809 4.92383 13.1055 4.7832 12.6543 4.78906L8.81641 4.81836L7.65039 1.15039C7.50977 0.722656 7.29883 0.5 6.99414 0.5C6.69531 0.5 6.48438 0.722656 6.34375 1.15039L5.17773 4.81836L1.33984 4.78906C0.888672 4.7832 0.613281 4.92383 0.519531 5.21094C0.419922 5.49805 0.572266 5.77344 0.935547 6.03125L4.06445 8.27539L2.83984 11.9258C2.69336 12.3477 2.74609 12.6465 2.98633 12.8281ZM3.83008 11.6738C3.81836 11.6562 3.82422 11.6504 3.83008 11.6152L4.99609 8.26953C5.07812 8.04102 5.03125 7.85352 4.82617 7.71289L1.9082 5.69727C1.87891 5.67969 1.87305 5.66797 1.87891 5.65625C1.88477 5.63867 1.89648 5.63867 1.93164 5.63867L5.47656 5.69727C5.7168 5.70312 5.86914 5.60938 5.94531 5.36914L6.96484 1.97656C6.9707 1.94141 6.98242 1.92969 6.99414 1.92969C7.01172 1.92969 7.02344 1.94141 7.0293 1.97656L8.04883 5.36914C8.125 5.60938 8.27734 5.70312 8.51758 5.69727L12.0625 5.63867C12.0977 5.63867 12.1094 5.63867 12.1152 5.65625C12.1211 5.66797 12.1094 5.67969 12.0859 5.69727L9.16797 7.71289C8.96289 7.85352 8.91602 8.04102 8.99805 8.26953L10.1641 11.6152C10.1699 11.6504 10.1758 11.6562 10.1641 11.6738C10.1523 11.6855 10.1348 11.6797 10.1113 11.6621L7.29297 9.51172C7.10547 9.36523 6.88867 9.36523 6.70117 9.51172L3.88281 11.6621C3.85938 11.6797 3.8418 11.6855 3.83008 11.6738Z\" fill={\"#202020\"} fillOpacity={\"0.5\"}/>\r\n        </svg>\r\n\r\n    )\r\n};\r\nexport const Important = ({width, height}) => {\r\n    return (\r\n        <svg width={width} height={height} viewBox=\"0 0 14 13\">\r\n            <path\r\n                d=\"M2.98633 12.8281C3.22656 13.0156 3.53125 12.9512 3.89453 12.6875L6.99414 10.4082L10.0996 12.6875C10.4629 12.9512 10.7617 13.0156 11.0078 12.8281C11.248 12.6465 11.3008 12.3477 11.1543 11.9258L9.92969 8.27539L13.0586 6.03125C13.4219 5.77344 13.5684 5.49805 13.4746 5.21094C13.3809 4.92383 13.1055 4.7832 12.6543 4.78906L8.81641 4.81836L7.65039 1.15039C7.50977 0.722656 7.29883 0.5 6.99414 0.5C6.69531 0.5 6.48438 0.722656 6.34375 1.15039L5.17773 4.81836L1.33984 4.78906C0.888672 4.7832 0.613281 4.92383 0.519531 5.21094C0.419922 5.49805 0.572266 5.77344 0.935547 6.03125L4.06445 8.27539L2.83984 11.9258C2.69336 12.3477 2.74609 12.6465 2.98633 12.8281Z\"\r\n                fill=\"#FFB423\"/>\r\n        </svg>\r\n\r\n    )\r\n};\r\nexport const ShowBoards = ({height, width}) => {\r\n    return (\r\n        <svg width={width} height={height} viewBox=\"0 0 99 26\" fill=\"none\">\r\n            <g opacity=\"0.7\">\r\n                <path d=\"M43.5591 19C45.8149 19 47.2139 17.8354 47.2139 15.9751C47.2139 14.5762 46.1592 13.5288 44.7236 13.4189V13.3604C45.8442 13.1919 46.7085 12.2251 46.7085 11.0679C46.7085 9.44922 45.4634 8.43115 43.4785 8.43115H38.8789V19H43.5591ZM41.0908 10.0791H42.9072C43.9399 10.0791 44.5332 10.5625 44.5332 11.4121C44.5332 12.3057 43.8594 12.8257 42.6802 12.8257H41.0908V10.0791ZM41.0908 17.3521V14.2832H42.9438C44.2476 14.2832 44.958 14.8105 44.958 15.7993C44.958 16.8101 44.2695 17.3521 42.9951 17.3521H41.0908ZM53.2417 8.24805C50.1069 8.24805 48.144 10.3501 48.144 13.7192C48.144 17.0811 50.1069 19.1758 53.2417 19.1758C56.3691 19.1758 58.3394 17.0811 58.3394 13.7192C58.3394 10.3501 56.3691 8.24805 53.2417 8.24805ZM53.2417 10.0938C54.9702 10.0938 56.0762 11.5 56.0762 13.7192C56.0762 15.9312 54.9702 17.3301 53.2417 17.3301C51.5059 17.3301 50.3999 15.9312 50.3999 13.7192C50.3999 11.5 51.5132 10.0938 53.2417 10.0938ZM66.2495 19H68.6006L64.9238 8.43115H62.3237L58.6543 19H60.9248L61.7305 16.4365H65.4438L66.2495 19ZM63.5615 10.4526H63.6128L64.9678 14.7812H62.2065L63.5615 10.4526ZM71.8965 15.1328H73.6689L75.6392 19H78.144L75.9175 14.8032C77.1333 14.3271 77.8364 13.1553 77.8364 11.8003C77.8364 9.71289 76.4448 8.43115 74.0132 8.43115H69.6846V19H71.8965V15.1328ZM71.8965 10.1597H73.7788C74.8774 10.1597 75.5659 10.8188 75.5659 11.8442C75.5659 12.8916 74.9141 13.5288 73.8008 13.5288H71.8965V10.1597ZM79.2939 8.43115V19H83.3296C86.501 19 88.3687 17.0298 88.3687 13.6753C88.3687 10.3208 86.501 8.43115 83.3296 8.43115H79.2939ZM81.5059 10.2549H83.0659C85.0142 10.2549 86.1128 11.4707 86.1128 13.6826C86.1128 15.9678 85.0435 17.1689 83.0659 17.1689H81.5059V10.2549ZM89.394 15.9824C89.46 17.9746 91.1372 19.1758 93.6567 19.1758C96.3008 19.1758 97.9194 17.8721 97.9194 15.8066C97.9194 14.2026 96.9453 13.3018 94.7114 12.855L93.5908 12.6279C92.3457 12.3789 91.833 11.9761 91.833 11.3242C91.833 10.5479 92.5654 10.0352 93.6567 10.0352C94.77 10.0352 95.5537 10.5771 95.627 11.478H97.7144C97.6777 9.53711 96.125 8.24805 93.6567 8.24805C91.3057 8.24805 89.6211 9.52979 89.6211 11.4634C89.6211 13.0381 90.6538 14.0488 92.7632 14.4663L93.8765 14.686C95.2021 14.957 95.7002 15.3525 95.7002 16.0483C95.7002 16.8247 94.8945 17.396 93.7153 17.396C92.5142 17.396 91.6206 16.8687 91.4814 15.9824H89.394Z\" fill=\"white\"/>\r\n                <path d=\"M6.24902 3.125C3.82129 3.125 2.82227 4.27441 2.82227 6.65918V11.1494C2.82227 13.5342 3.82129 14.6836 6.24902 14.6836H20.7402C23.1787 14.6836 24.167 13.5342 24.167 11.1494V6.65918C24.167 4.27441 23.1787 3.125 20.7402 3.125H6.24902ZM5.70117 11.2139V6.59473C5.70117 5.93945 5.95898 5.60645 6.625 5.60645H20.3643C21.0303 5.60645 21.2881 5.93945 21.2881 6.59473V11.2139C21.2881 11.8799 21.0303 12.1914 20.3643 12.1914H6.625C5.95898 12.1914 5.70117 11.8799 5.70117 11.2139ZM6.0127 17.8848C6.0127 17.0254 5.36816 16.3701 4.49805 16.3701C3.68164 16.3701 2.99414 17.0469 2.99414 17.8848C2.99414 18.6904 3.68164 19.3887 4.49805 19.3887C5.31445 19.3887 6.0127 18.6904 6.0127 17.8848ZM23.6299 17.8848C23.6299 17.2188 23.0928 16.7246 22.3945 16.7246H8.36523C7.67773 16.7246 7.15137 17.2188 7.15137 17.8848C7.15137 18.5508 7.67773 19.0449 8.36523 19.0449H22.3945C23.0928 19.0449 23.6299 18.5508 23.6299 17.8848ZM6.0127 22.1816C6.0127 21.3223 5.36816 20.667 4.49805 20.667C3.68164 20.667 2.99414 21.3438 2.99414 22.1816C2.99414 22.9873 3.68164 23.6963 4.49805 23.6963C5.31445 23.6963 6.0127 22.9873 6.0127 22.1816ZM23.6299 22.1816C23.6299 21.5156 23.0928 21.0215 22.3945 21.0215H8.36523C7.67773 21.0215 7.15137 21.5156 7.15137 22.1816C7.15137 22.8477 7.67773 23.3418 8.36523 23.3418H22.3945C23.0928 23.3418 23.6299 22.8477 23.6299 22.1816Z\" fill=\"white\"/>\r\n            </g>\r\n        </svg>\r\n\r\n\r\n    )\r\n};\r\nexport const ChangeBoardName = ({height, width}) => {\r\n    return (\r\n        <svg width={width} height={height} viewBox=\"0 0 69 80\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M1 1.89488L67 40L0.999996 78.1051L1 1.89488Z\" fill=\"none\" stroke=\"black\" strokeWidth=\"2\"/>\r\n        </svg>\r\n    )\r\n};","export const closeInput = (e, newItem, setNewItem) => {\r\n    if (newItem && e.target.nodeName !== \"INPUT\") {\r\n        setNewItem(false)\r\n    }\r\n};\r\n\r\nexport const handleDragEnd = (dispatch, item, draggableId, destination, type, subjectId) => {\r\n    const itemCopy = item.find((i) => i.name + i.id === draggableId);\r\n    switch (type) {\r\n        case \"subjects\":\r\n            return (\r\n                dispatch({\r\n                    type: \"CHANGE_SUBJECT_ORDER\",\r\n                    payload: {\r\n                        subjectCopy: itemCopy,\r\n                        finishIndex: destination.index\r\n                    }\r\n                })\r\n            );\r\n        case \"categories\":\r\n            return (\r\n                dispatch({\r\n                    type: \"CHANGE_CATEGORY_ORDER\",\r\n                    payload: {\r\n                        categoryCopy: itemCopy,\r\n                        finishIndex: destination.index,\r\n                        subjectId: subjectId\r\n                    }\r\n                })\r\n            );\r\n        default:\r\n            return null\r\n\r\n    }\r\n};\r\n","import React, {memo, useState} from 'react';\r\nimport './Style.scss'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport ListLayout, {replaced} from \"./Layout/ListLayout\";\r\nimport {Close} from \"../../SVG/SVG\";\r\nimport {DragDropContext, Draggable, Droppable} from \"react-beautiful-dnd\";\r\nimport {closeInput, handleDragEnd} from \"../../Functions\";\r\n\r\nlet idCategory = 4000;\r\n\r\nconst Category = memo(({subject, dispatch}) => {\r\n\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [newCategory, setNewCategory] = useState(false);\r\n    const addCategory = (e) => {\r\n        if ((inputValue.length > 0 && e.key === \"Enter\") || (inputValue.length > 0 && e.target.nodeName === \"BUTTON\") || (inputValue.length > 0 && e.target.innerHTML === \"Add \"+subject.name)) {\r\n            dispatch({\r\n                type: \"ADD_NEW_CATEGORY\",\r\n                payload:\r\n                    {\r\n                        subjectId: subject.id,\r\n                        newCategory: inputValue,\r\n                        categoryId: idCategory++\r\n                    }\r\n            });\r\n            setNewCategory(false);\r\n            setInputValue('')\r\n        }\r\n    };\r\n    const deleteItem = (id) => {\r\n        dispatch({\r\n            type: \"DELETE_CATEGORY_ITEM\",\r\n            payload: {\r\n                subjectId: subject.id,\r\n                categoryId: id,\r\n            }\r\n        })\r\n    };\r\n    const categoryDragEnd = ({draggableId, destination, source}) => {\r\n        if (!destination) {\r\n            return;\r\n        }\r\n        if (destination.droppableId !== source.droppableId) {\r\n            return;\r\n        }\r\n        handleDragEnd(dispatch, subject.category, draggableId, destination, \"categories\", subject.id)\r\n    };\r\n    const setCategory = (e) => {\r\n        if (!newCategory) {\r\n            setNewCategory(true)\r\n        }\r\n        if (newCategory) {\r\n            addCategory(e);\r\n            setNewCategory(false)\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"learningCategory\" onClick={(e) => {\r\n            closeInput(e, newCategory, setNewCategory)\r\n        }}>\r\n            <div onClick={setCategory} className=\"learningHeader\">\r\n                Add {subject.name}\r\n            </div>\r\n            <DragDropContext onDragEnd={categoryDragEnd}>\r\n                <div className='learningList'>\r\n                    <div className=\"learningList__add\">\r\n                        <ListLayout newItem={newCategory}\r\n                                    inputValue={inputValue} setInputValue={setInputValue}\r\n                                    addItem={addCategory}/>\r\n                    </div>\r\n                    <Droppable droppableId={\"categoryList\"}>\r\n                        {(provided) => {\r\n                            return (\r\n                                <ul\r\n                                    ref={provided.innerRef}\r\n                                    {...provided.droppableProps}\r\n                                    className='learningList__list'>\r\n                                    {subject.category.length > 0 && subject.category.map((item, index) =>\r\n                                        <Draggable\r\n                                            key={item.id}\r\n                                            index={index}\r\n                                            draggableId={item.name + item.id}>\r\n                                            {(provider) => {\r\n                                                return (\r\n\r\n                                                    <li ref={provider.innerRef}\r\n                                                        {...provider.draggableProps}\r\n                                                        {...provider.dragHandleProps}>\r\n                                                        <div style={{backgroundColor: subject.color}}>\r\n                                                            <NavLink\r\n                                                                to={`/learning/${replaced(subject.name)}${subject.id}/${replaced(item.name)}${item.id}`}>\r\n                                                                {item.name}\r\n                                                            </NavLink>\r\n                                                            <span className=\"deleteItem\"\r\n                                                                  onClick={() => deleteItem(item.id)}><Close/></span>\r\n                                                        </div>\r\n                                                    </li>\r\n                                                )\r\n                                            }}\r\n                                        </Draggable>\r\n                                    )}\r\n                                </ul>\r\n                            )\r\n                        }}\r\n                    </Droppable>\r\n                </div>\r\n            </DragDropContext>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Category;","import React, {useState} from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport ListLayout, {replaced} from \"./Layout/ListLayout\";\r\nimport {Close} from \"../../SVG/SVG\";\r\nimport {DragDropContext, Draggable, Droppable} from \"react-beautiful-dnd\";\r\nimport {closeInput, handleDragEnd} from \"../../Functions\";\r\n\r\n\r\nlet idSubject = 3000;\r\nconst colors = [\"#5199FF\", \"#1771F1\", \"#E4FFF9\", \"#B5FBDD\", \"#76FEC5\", \"#FFFCBB\", \"#FFE55E\", \"#FBCEB5\", \"#FE9E76\", \"#FFDFDC\", \"#FF9CA1\", \"#FF6A61\", \"#F6522E\", \"#EF2FA2\", \"#E47CCD\"];\r\nconst Subjects = ({dispatch, subjects}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [newSubject, setNewSubject] = useState(false);\r\n\r\n    const addSubject = (e) => {\r\n        if ((inputValue.length > 0 && e.key === \"Enter\") || (inputValue.length > 0 && e.target.nodeName === \"BUTTON\")|| (inputValue.length > 0 && e.target.className === \"learningHeader\")) {\r\n            dispatch({\r\n                type: \"ADD_NEW_SUBJECT\",\r\n                payload: {\r\n                    id: idSubject++,\r\n                    subjectName: inputValue,\r\n                    subjectColor: colors[Math.floor(Math.random() * colors.length)]\r\n                },\r\n            });\r\n            setNewSubject(false);\r\n            setInputValue('')\r\n        }\r\n    };\r\n    const deleteItem = (id) => {\r\n        dispatch({\r\n            type: \"DELETE_SUBJECT_ITEM\",\r\n            payload: {\r\n                subjectId: id,\r\n            }\r\n        })\r\n    };\r\n    const subjectDragEnd = ({draggableId, destination, source}) => {\r\n        if (!destination) {\r\n            return;\r\n        }\r\n        if (destination.droppableId !== source.droppableId) {\r\n            return;\r\n        }\r\n        handleDragEnd(dispatch, subjects, draggableId, destination, \"subjects\")\r\n    };\r\n    const setSubject = (e) => {\r\n        if (!newSubject) {\r\n            setNewSubject(true)\r\n        }\r\n        if (newSubject) {\r\n            addSubject(e);\r\n            setNewSubject(false)\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"learningSubjects\" onClick={(e) => closeInput(e, newSubject, setNewSubject)}>\r\n            <NavLink to={'/learning'}>\r\n                <div onClick={setSubject} className=\"learningHeader\">\r\n                    Add Learning\r\n                </div>\r\n            </NavLink>\r\n            <DragDropContext onDragEnd={subjectDragEnd}>\r\n                <div className='learningList'>\r\n                    <ListLayout newItem={newSubject}\r\n                                inputValue={inputValue} setInputValue={setInputValue}\r\n                                addItem={addSubject}/>\r\n                    <Droppable droppableId={\"subjectList\"}>\r\n                        {(provided) => {\r\n                            return (\r\n                                <ul ref={provided.innerRef}\r\n                                    {...provided.droppableProps}\r\n                                    className='learningList__list'>\r\n                                    {subjects && subjects.map((subject, index) => {\r\n                                            return (\r\n                                                <Draggable\r\n                                                    key={subject.id}\r\n                                                    index={index}\r\n                                                    draggableId={subject.name + subject.id}\r\n                                                >\r\n                                                    {(provider) => {\r\n                                                        return (\r\n                                                            <li ref={provider.innerRef}\r\n                                                                {...provider.draggableProps}\r\n                                                                {...provider.dragHandleProps}\r\n                                                            >\r\n                                                                <div style={{backgroundColor: subject.color}}>\r\n                                                                    <NavLink\r\n                                                                        to={`/learning/${replaced(subject.name)}${subject.id}`}>\r\n                                                                        {subject.name}\r\n                                                                    </NavLink>\r\n                                                                    <span className=\"deleteItem\"\r\n                                                                          onClick={() => deleteItem(subject.id)}><Close/></span>\r\n                                                                </div>\r\n                                                            </li>\r\n                                                        )\r\n                                                    }}\r\n                                                </Draggable>\r\n                                            )\r\n                                        }\r\n                                    )}\r\n                                </ul>\r\n                            )\r\n                        }}\r\n                    </Droppable>\r\n                </div>\r\n            </DragDropContext>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Subjects","import styled from \"styled-components\";\r\nimport React from \"react\";\r\n\r\nconst SectionTextStyles = styled.div`\r\nposition:${({show}) => show ? \"absolute\" : \"static\"};\r\ntop:0;\r\nright:0;\r\nleft:0;\r\nbottom:0;\r\nwidth:100%;\r\nheight:${({show}) => show ? \"80%\" : \"45px\"};\r\nborder-radius:${({show}) => show ? \"0px\" : \"10px\"};\r\nz-index:${({show}) => show ? \"1\" : \"0\"};\r\n\r\n.textItemHeader {\r\n  display:flex;\r\n  justify-content: space-between;\r\n  border-radius: ${({show}) => show ? \"0\" : \"15px\"};;\r\n  border-top-left-radius: 15px;\r\n  border-bottom-left-radius: 15px;\r\n  align-items: center;\r\n  position: relative;\r\n  height: 45px;\r\n  width:${({show}) => show ? \"190px\" : \"100%\"};\r\n  transform: ${({show}) => show ? \"translateX(600px)\" : \"translateX(0)\"};\r\n  transition: all .3s; \r\n    &__wrapper{\r\n    width:100%;\r\n   border-radius:${({show}) => show ? \"0\" : \"15px\"};;\r\n    }\r\n  &__title {\r\n    margin-left: 10px;\r\n  }\r\n  \r\n  &__nav {\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n    position: absolute;\r\n    top: 2px;\r\n    right: 4px;\r\n\r\n    & span {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 17px;\r\n    height: 17px;\r\n    cursor: pointer;\r\n          & svg {\r\n        transition: all .2  s;\r\n        &:hover {\r\n          transform: scale(1.2);\r\n          transition: all .2    s;\r\n          & path {\r\n            fill: rgba(0, 0, 0, 0.7);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.textItemContent{\r\n    height: 100%;\r\n    & textarea{\r\n    height: 100%;\r\n    width: 100%;\r\n    overflow-y: auto;\r\n    overflow-x: hidden;\r\n    padding:10px;\r\n    border: none;\r\n    background-color: #fff3bf;\r\n    color: ${(props) => props.textAdded ? \"rgba(0, 0, 0, 0.44)\" : \"black\"};\r\n    resize: none;\r\n    outline: none;\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nexport const SectionText = ({children, show, textAdded}) => {\r\n    return <SectionTextStyles show={show} textAdded={textAdded}>{children}</SectionTextStyles>\r\n};\r\n","import React, {useState} from 'react';\r\nimport '../Style.scss'\r\nimport {SectionText} from \"../../Styled/ShowHideLearnText/ShowHideLearnText\";\r\nimport {Close, EditDone, ResizeHide, ResizeShow} from \"../../../SVG/SVG\";\r\n\r\nconst TextItem = ({dispatch, text, subject, category}) => {\r\n    const [inputValue, setInputValue] = useState(text.text);\r\n    const [textAdded, setText] = useState(false);\r\n    const [focusText, setFocusText] = useState(true);\r\n    const [show, setShow] = useState(false);\r\n    const addCategoryText = () => {\r\n        dispatch({\r\n            type: \"ADD_NEW_CATEGORY_TEXT\",\r\n            payload:\r\n                {\r\n                    subjectId: subject.id,\r\n                    categoryId: category.id,\r\n                    textId: text.id,\r\n                    categoryTextChanged: inputValue\r\n                }\r\n        });\r\n        setText(true);\r\n        setFocusText(false)\r\n    };\r\n    const deleteCategoryText = () => {\r\n        dispatch({\r\n            type: \"DELETE_CATEGORY_TEXT\",\r\n            payload:\r\n                {\r\n                    subjectId: subject.id,\r\n                    categoryId: category.id,\r\n                    textId: text.id\r\n                }\r\n        })\r\n    };\r\n\r\n\r\n    return (\r\n        <SectionText show={show} textAdded={textAdded}>\r\n            <div className=\"textItemHeader__wrapper\"\r\n            style={{backgroundColor:\"#ffffff\"}}\r\n            >\r\n                <div className=\"textItemHeader\"\r\n                     style={{backgroundColor: subject.color}}\r\n                >\r\n                <span\r\n                    className=\"textItemHeader__title\">{text.name}</span>\r\n                    <div className=\"textItemHeader__nav\">\r\n                        {show && <span onClick={() => setShow(false)}><ResizeHide width={\"11px\"} height={\"11px\"}/></span>}\r\n                        {show && <span onClick={addCategoryText}><EditDone width={\"13px\"} height={\"13px\"}/></span>}\r\n                        {!show && <span className=\"expandTextItem\" onClick={() => setShow(true)}><ResizeShow width={\"10px\"}\r\n                                                                                                             height={\"10px\"}/></span>}\r\n                        {!show && <span className=\"deleteTextItem\" onClick={deleteCategoryText}><Close width={\"17px\"}\r\n                                                                                                       height={\"17px\"}/></span>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {show && <div className=\"textItemContent\">\r\n                <textarea\r\n                    spellCheck={false}\r\n                    autoFocus={focusText}\r\n                    value={inputValue} onFocus={() => setText(false)}\r\n                    onChange={(e) => setInputValue(e.target.value)}/>\r\n            </div>}\r\n        </SectionText>\r\n    );\r\n};\r\n\r\nexport default TextItem;","import React, {useState} from 'react';\r\nimport TextItem from \"./TextItem\";\r\nimport ListLayout from \"../Layout/ListLayout\";\r\nimport {closeInput} from \"../../../Functions\";\r\n\r\nlet idText = 5000;\r\n\r\nconst Text = ({dispatch, subject, category}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [newCategoryTextTitle, setNewCategoryTextTitle] = useState(false);\r\n    const addCategoryText = (e) => {\r\n        if ((inputValue.length > 0 && e.key === \"Enter\") || (inputValue.length > 0 && e.target.nodeName === \"BUTTON\")|| (inputValue.length > 0 && e.target.innerHTML === \"Add \"+category.name)) {\r\n            dispatch({\r\n                type: \"ADD_NEW_CATEGORY_TEXT_TITLE\",\r\n                payload:\r\n                    {\r\n                        subjectId: subject.id,\r\n                        categoryId: category.id,\r\n                        newCategoryTextTitle: inputValue,\r\n                        id: idText++\r\n                    }\r\n            });\r\n            setNewCategoryTextTitle(false);\r\n            setInputValue('')\r\n        }\r\n    };\r\n    const setText = (e) => {\r\n        if (!newCategoryTextTitle) {\r\n            setNewCategoryTextTitle(true)\r\n        }\r\n        if (newCategoryTextTitle) {\r\n            addCategoryText(e);\r\n            setNewCategoryTextTitle(false)\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"learningText\" onClick={(e) => {\r\n            closeInput(e, newCategoryTextTitle, setNewCategoryTextTitle)\r\n        }}>\r\n                <div onClick={setText} className=\"learningHeader\">\r\n                    Add {category.name}\r\n                </div>\r\n                <div className=\"learningText__window\">\r\n                        <div className='learningList'>\r\n                            <div className=\"learningList__add\">\r\n                                <ListLayout newItem={newCategoryTextTitle}\r\n                                            inputValue={inputValue} setInputValue={setInputValue}\r\n                                            addItem={addCategoryText}/>\r\n                            </div>\r\n                                <div className=\"learningText__list\">\r\n                                    {category.text.length > 0 && category.text.map((text) =>\r\n                                        <TextItem dispatch={dispatch} text={text} subject={subject} category={category}\r\n                                                  key={text.id}/>\r\n                                    )}\r\n                                </div>\r\n                        </div>\r\n                </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Text;","export const learningReducer = (state, {type, payload}) => {\r\n    switch (type) {\r\n        case \"ADD_NEW_SUBJECT\":\r\n            return [\r\n                ...state,\r\n                {\r\n                    name: payload.subjectName, id: payload.id, color:payload.subjectColor,\r\n                    category: []\r\n                }\r\n            ];\r\n        case \"ADD_NEW_CATEGORY\":\r\n            return (\r\n                state.map((item) => item.id === payload.subjectId ? {\r\n                        ...item,\r\n                        category: [...item.category, {name: payload.newCategory, id: payload.categoryId, text: []}]\r\n                    }\r\n                    : item)\r\n            );\r\n        case \"ADD_NEW_CATEGORY_TEXT_TITLE\":\r\n            return (\r\n                state.map((item) => item.id === payload.subjectId ? {\r\n                        ...item,\r\n                        category: item.category.map((category) => category.id === payload.categoryId ? {\r\n                            ...category,\r\n                            text: [...category.text, {name: payload.newCategoryTextTitle, id: payload.id, text: ''},]\r\n                        } : category)\r\n                    }\r\n                    : item)\r\n            );\r\n        case \"ADD_NEW_CATEGORY_TEXT\":\r\n            return (\r\n                state.map((item) => item.id === payload.subjectId ? {\r\n                        ...item,\r\n                        category: item.category.map((category) => category.id === payload.categoryId ? {\r\n                                ...category,\r\n                                text: category.text.map((text) => text.id === payload.textId\r\n                                    ? {name: text.name, id: text.id, text: payload.categoryTextChanged}\r\n                                    : text)\r\n                            }\r\n                            : category)\r\n                    }\r\n                    : item)\r\n            );\r\n        case \"DELETE_SUBJECT_ITEM\":\r\n            return (\r\n                state.filter((item) => item.id !== payload.subjectId)\r\n            );\r\n        case \"DELETE_CATEGORY_ITEM\":\r\n            return (\r\n                state.map((item) => item.id === payload.subjectId\r\n                    ? {\r\n                        ...item,\r\n                        category: item.category.filter((category) => category.id !== payload.categoryId)\r\n                    }\r\n                    : item\r\n                )\r\n            );\r\n        case \"DELETE_CATEGORY_TEXT\":\r\n            return (\r\n                state.map((item) => item.id === payload.subjectId ? {\r\n                        ...item,\r\n                        category: item.category.map((category) => category.id === payload.categoryId ? {\r\n                                ...category,\r\n                                text: category.text.filter((text) => text.id !== payload.textId)\r\n                            }\r\n                            : category)\r\n                    }\r\n                    : item)\r\n            );\r\n        case \"CHANGE_SUBJECT_ORDER\":\r\n            const {subjectCopy} = payload;\r\n            const remainingSubjects = state.filter((subject) => subject.id !== subjectCopy.id);\r\n            return [\r\n                ...remainingSubjects.slice(0, payload.finishIndex),\r\n                subjectCopy,\r\n                ...remainingSubjects.slice(payload.finishIndex),\r\n            ];\r\n        case \"CHANGE_CATEGORY_ORDER\":\r\n            const {categoryCopy, subjectId} = payload;\r\n            const subjectCategories = state.find((item) => item.id === subjectId);\r\n            const remainCategories = subjectCategories.category.filter((category) => category.id !== categoryCopy.id);\r\n            const newCategoriesPosition = [\r\n                ...remainCategories.slice(0, payload.finishIndex),\r\n                categoryCopy,\r\n                ...remainCategories.slice(payload.finishIndex),\r\n            ];\r\n            return (\r\n                state.map((item) => item.id === subjectId\r\n                    ? {\r\n                        ...item,\r\n                        category: newCategoriesPosition\r\n                    }\r\n                    : item\r\n                )\r\n            );\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\n\r\n","import React, {useReducer} from 'react';\r\nimport './Style.scss'\r\nimport {Link, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport Category from \"./Category\";\r\nimport Subjects from \"./Subjects\";\r\nimport Text from \"./Text/Text\";\r\nimport {learningReducer} from \"../../Reducers/LearningReducer\";\r\nimport {CSSTransition, TransitionGroup} from \"react-transition-group\";\r\nimport {replaced} from \"./Layout/ListLayout\";\r\nimport {Home} from \"../../SVG/SVG\";\r\n\r\n\r\n\r\n\r\n\r\nconst Learning = (props) => {\r\n    const {match:{params:{category,text}}} = props;\r\n\r\n\r\n    const [state, dispatch] = useReducer(\r\n        learningReducer,\r\n        []\r\n    );\r\n\r\n\r\n    return (\r\n        <div className=\"learning\">\r\n            <div className=\"home\"><Link to={'/'}><Home width={\"70px\"} height={\"30px\"}/></Link></div>\r\n            <Subjects dispatch={dispatch} subjects={state}/>\r\n            <TransitionGroup component={null}>\r\n                <CSSTransition key={category} exit={false} timeout={500} classNames={'animCategoryPage'}>\r\n                    <Switch>\r\n                        {state && state.map((subject) => <Route key={subject.id}\r\n                                                                path={`/learning/${replaced(subject.name)}${subject.id}/:text?`}\r\n                                                                render={() => <Category dispatch={dispatch}\r\n                                                                                        subject={subject}/>}/>)}\r\n                    </Switch>\r\n                </CSSTransition>\r\n            </TransitionGroup>\r\n            <TransitionGroup component={null}>\r\n                <CSSTransition key={text} exit={false} timeout={500} classNames={'animTextPage'}>\r\n                    <Switch>\r\n                        {state && state.map((subject) => subject.category.map((category) =>\r\n                            <Route\r\n                                path={`/learning/${replaced(subject.name)}${subject.id}/${replaced(category.name)}${category.id}`}\r\n                                render={() => <Text dispatch={dispatch} subject={subject} category={category}/>}/>))}\r\n                    </Switch>\r\n                </CSSTransition>\r\n            </TransitionGroup>\r\n\r\n        </div>\r\n    )\r\n        ;\r\n};\r\n\r\nexport default withRouter(Learning);","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst CardNameStyles = styled.span`\r\ncolor: \"black\";\r\nfont-weight:${({important}) => important ? \"900\" : \"300\"};\r\nfont-size: \"13px\";\r\ncolor:${({important})=>important?\"#FFB423\":\"#000000\"};\r\ntext-decoration: ${({done}) => done ? \"line-through\" : \"none\"};\r\nwidth:165px;\r\nword-wrap:break-word;\r\nwhite-space: normal;\r\n`;\r\nexport const CardNameStyled = ({children, important, done}) => {\r\n    return <CardNameStyles important={important} done={done}>{children}</CardNameStyles>\r\n};\r\n\r\n\r\n\r\n","import React, {memo, useEffect, useRef, useState} from 'react';\r\nimport './style.scss'\r\nimport {CardNameStyled} from \"../Styled/TodoItemStyled/CardNameStyled\";\r\nimport {Draggable} from \"react-beautiful-dnd\";\r\nimport {Delete, Done, Important, IsDone, IsImportant} from \"../../SVG/SVG\";\r\n\r\nconst TodoCard = memo(({card, index, deleteCard, importantCard, cardDone}) => {\r\n    const [change, setChange] = useState(false);\r\n    const [changeInputValue, setChangeInputValue] = useState(card.name);\r\n    const changeInputRef = useRef(null);\r\n    useEffect(() => {\r\n        if (change) {\r\n            changeInputRef.current.focus();\r\n            changeInputRef.current.select();\r\n        }\r\n    }, [change]);\r\n    const changeCardName = () => {\r\n        if (changeInputValue !== \" \") {\r\n            card.name = changeInputValue;\r\n            setChangeInputValue(card.name);\r\n            setChange(false);\r\n        }\r\n        setChangeInputValue(card.name);\r\n        setChange(false);\r\n    };\r\n    const deleteItem = () => {\r\n        deleteCard(card.id);\r\n    };\r\n    const setImportant = () => {\r\n        importantCard(!card.important, card.id)\r\n    };\r\n    const setDone = () => {\r\n        cardDone(!card.done, card.id)\r\n    };\r\n\r\n\r\n    return (\r\n        <Draggable\r\n            key={card.id}\r\n            index={index}\r\n            draggableId={card.name + card.id}\r\n        >\r\n            {(provider) => {\r\n                return (\r\n                    <li\r\n                        ref={provider.innerRef}\r\n                        {...provider.draggableProps}\r\n                        {...provider.dragHandleProps}\r\n                        className=\"card\" onDoubleClick={() => setChange(true)}>\r\n                        {change && <textarea\r\n                            maxLength={50}\r\n                            className=\"cardChange\" ref={changeInputRef} value={changeInputValue}\r\n                            onChange={(e) => setChangeInputValue(e.target.value.replace(/\\s+/g, ' '))}\r\n                            onBlur={changeCardName}/>}\r\n\r\n                        {!change &&\r\n                        <CardNameStyled important={card.important} done={card.done}>{card.name}</CardNameStyled>}\r\n                        {!change &&\r\n                        <div className=\"cardNav\">\r\n                            <span className=\"cardNav__important\" onClick={setImportant}>\r\n                                {!card.important && <IsImportant height={\"15px\"} width={\"15px\"}/>}\r\n                                {card.important && <Important height={\"15px\"} width={\"15px\"}/>}\r\n                            </span>\r\n                            <span className=\"cardNav__done\" onClick={setDone}>\r\n                               {!card.done && <IsDone height={\"15px\"} width={\"15px\"}/>}\r\n                                {card.done && <Done height={\"15px\"} width={\"15px\"}/>}\r\n                            </span>\r\n                            <span className=\"cardNav__delete\" onClick={deleteItem}>\r\n                                <Delete width={\"15px\"} height={\"15px\"}/>\r\n                            </span>\r\n                        </div>}\r\n                    </li>\r\n                )\r\n            }}\r\n        </Draggable>\r\n    );\r\n})\r\n\r\nexport default TodoCard;\r\n\r\n\r\n\r\n","import React, {memo, useEffect, useRef, useState} from 'react';\r\nimport './style.scss'\r\nimport TodoCard from \"./TodoCard\";\r\nimport {Droppable} from \"react-beautiful-dnd\";\r\nimport {DeleteColumn} from \"../../SVG/SVG\";\r\n\r\nlet cardId = 2000;\r\n\r\nconst TodoColumn = memo(({board, boardList, column, setNewBoard,deleteColumn}) => {\r\n        const addImportantDone = (isImportant = false, importantCardId = null, isDone = false, doneCardId = null) => {\r\n            return boardList.map((boardListItem) => boardListItem.id === board.id\r\n                ? {\r\n                    ...boardListItem,\r\n                    columns: boardListItem.columns.map((columnsItem) => columnsItem.id === column.id\r\n                        ? importantCardId || doneCardId ? {\r\n                            ...columnsItem,\r\n                            cards: column.cards.map((card) => (importantCardId ? card.id === importantCardId : card.id === doneCardId)\r\n                                ? {    //Important Done\r\n                                    name: card.name,\r\n                                    id: card.id,\r\n                                    important: importantCardId ? isImportant : card.important,\r\n                                    done: doneCardId ? isDone : card.done\r\n                                }\r\n                                : card\r\n                            )\r\n                        } : { //Add New Card\r\n                            ...columnsItem,\r\n                            cards: [...columnsItem.cards, {\r\n                                name: inputCardValue,\r\n                                id: cardId++,\r\n                                important: false,\r\n                                done: false\r\n                            }]\r\n                        }\r\n                        : columnsItem\r\n                    )\r\n                }\r\n                : boardListItem\r\n            )\r\n        };\r\n\r\n        const [inputCardValue, setInputCardValue] = useState('');\r\n        const [addCard, setAddCard] = useState(false);\r\n        const [changeColumnValue, setColumnValue] = useState(column.name);\r\n        const [newColumnName, setNewColumnName] = useState(false);\r\n        const columnNameRef = useRef(null);\r\n        const columnCardNameRef = useRef(null);\r\n\r\n        useEffect(() => {\r\n            columnNameRef.current && columnNameRef.current.focus();\r\n            columnNameRef.current && columnNameRef.current.select();\r\n        }, [newColumnName]);\r\n        useEffect(() => {\r\n            columnCardNameRef.current && columnCardNameRef.current.focus();\r\n        }, [addCard]);\r\n\r\n\r\n        const addNewCard = (e) => {\r\n            if ((inputCardValue && inputCardValue.length > 0 && inputCardValue !== \" \" && e.key === \"Enter\")\r\n                || (inputCardValue && inputCardValue.length > 0 && inputCardValue !== \" \" && e.type === \"click\")\r\n                || (inputCardValue && inputCardValue.length > 0 && inputCardValue !== \" \" && e.type === \"blur\")) {\r\n                setNewBoard(addImportantDone());\r\n                setInputCardValue('');\r\n            }\r\n\r\n        };\r\n        const importantCard = (isImportant, importantCardId) => {\r\n            setNewBoard(addImportantDone(isImportant, importantCardId));\r\n        };\r\n        const cardDone = (isDone, doneCardId) => {\r\n            setNewBoard(addImportantDone(undefined, undefined, isDone, doneCardId))\r\n        };\r\n        const deleteCard = (id) => {\r\n            setNewBoard(\r\n                boardList.map((boardListItem) => boardListItem.id === board.id\r\n                    ? {\r\n                        ...boardListItem,\r\n                        columns: boardListItem.columns.map((columnsItem) => columnsItem.id === column.id\r\n                            ? {\r\n                                ...columnsItem,\r\n                                cards: columnsItem.cards.filter((card) => card.id !== id)\r\n                            }\r\n                            : columnsItem\r\n                        )\r\n                    }\r\n                    : boardListItem\r\n                )\r\n            );\r\n        };\r\n    const deleteItem = () => {\r\n        deleteColumn(column.id)\r\n    };\r\n        const changeColumnName = (e, columnId) => {\r\n            if ((changeColumnValue && changeColumnValue.length > 0 && changeColumnValue !== \" \" && e.key === \"Enter\")\r\n                || (changeColumnValue && changeColumnValue.length > 0 && changeColumnValue !== \" \" && e.type === \"blur\")) {\r\n                boardList.find((boardListItem) => boardListItem.id === board.id).columns.find((column) => column.id === columnId).name = changeColumnValue;\r\n                setNewColumnName(false)\r\n            }\r\n        };\r\n\r\n\r\n        return (\r\n            <div className=\"columnWrapper\">\r\n                <div className=\"column\">\r\n                    <div className=\"columnHeader\">\r\n                        <div>\r\n                            {!newColumnName &&\r\n                            <h5 onClick={() => setNewColumnName(true)}>{column.name}</h5>}\r\n                            {newColumnName &&\r\n                            <textarea maxLength={15} ref={columnNameRef} onKeyDown={(e) => changeColumnName(e, column.id)}\r\n                                      onBlur={(e) => changeColumnName(e, column.id)} value={changeColumnValue}\r\n                                      onChange={(e) => setColumnValue(e.target.value)}/>}\r\n                        </div>\r\n                        <div style={{cursor:\"pointer\"}} onClick={deleteItem}>\r\n                            <DeleteColumn/>\r\n                        </div>\r\n                    </div>\r\n                    <Droppable droppableId={column.name + column.id}>\r\n                        {(provided) => {\r\n                            return (\r\n                                <ul\r\n                                    ref={provided.innerRef}\r\n                                    {...provided.droppableProps}\r\n                                    className=\"columnContent\"\r\n                                    style={{height: `${(30.5 * column.cards.length)}px`}}\r\n                                >\r\n                                    {column.cards && column.cards.map((card, index) => {\r\n                                            return (\r\n                                                <TodoCard key={card.id}\r\n                                                          index={index}\r\n                                                          card={card}\r\n                                                          deleteCard={deleteCard}\r\n                                                          importantCard={importantCard}\r\n                                                          cardDone={cardDone}/>\r\n                                            )\r\n                                        }\r\n                                    )}\r\n                                </ul>\r\n                            )\r\n                        }}\r\n                    </Droppable>\r\n                    <div className=\"columnFooter\">\r\n                        {!addCard && column.cards.length === 0 &&\r\n                        <div className=\"columnFooter__add\">\r\n                            <button onClick={() => setAddCard(true)}>Add</button>\r\n                        </div>}\r\n                        {!addCard && column.cards.length > 0 && <div className=\"columnFooter__add\">\r\n                            <button onClick={() => setAddCard(true)}>Add one more card</button>\r\n                        </div>}\r\n                        {addCard &&\r\n                        <div onKeyDown={(e) => addNewCard(e)} className=\"columnFooter__input\">\r\n                    <textarea\r\n                        maxLength={15}\r\n                        onBlur={(e) => addNewCard(e)}\r\n                        ref={columnCardNameRef}\r\n                        value={inputCardValue}\r\n                        onChange={(e) => setInputCardValue(e.target.value.replace(/\\s+/g, ' '))}\r\n                        placeholder=\"Enter some title for this card\"/>\r\n                            <div className=\"columnFooter__addCard\">\r\n                                <button onClick={(e) => addNewCard(e)}>Add card</button>\r\n                                <span onClick={() => setAddCard(false)}>-</span>\r\n                            </div>\r\n                        </div>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n            ;\r\n    })\r\n;\r\n\r\nexport default TodoColumn;","import React, {useEffect, useRef} from 'react';\r\nimport TodoColumn from \"./TodoColumn\";\r\nimport {DragDropContext} from \"react-beautiful-dnd\";\r\n\r\nlet listId = 1000;\r\nconst TodoBoard = ({\r\n                       board, boardList, inputValue, setInputValue, setNewBoard,\r\n                       addList, setAddList, isActiveBoard, isChangeBoardName,activeBoardName,changeBoardName,setActiveBoardId\r\n                   }) => {\r\n    const newColumnNameRef = useRef();\r\n    useEffect(() => {\r\n        isActiveBoard(board.name);\r\n        setActiveBoardId(board.id)\r\n    }, []);\r\n    useEffect(() => {\r\n        newColumnNameRef.current && newColumnNameRef.current.focus();\r\n        newColumnNameRef.current && newColumnNameRef.current.select()\r\n    }, [addList]);\r\n    const addAnotherColumn = (e) => {\r\n        if ((inputValue.length > 0 && inputValue !== \" \" && e.key === \"Enter\") || (inputValue.length > 0 && inputValue !== \" \" && e.type === \"click\")) {\r\n            setNewBoard(boardList.map((item) => item.id === board.id\r\n                ? {\r\n                    ...item,\r\n                    columns: [...item.columns, {name: inputValue, id: listId++, cards: []}]\r\n                }\r\n                : item\r\n            ));\r\n            setInputValue(\"\");\r\n        }\r\n\r\n    };\r\n    const deleteColumn = (columnId) => {\r\n        setNewBoard(\r\n            boardList.map((boardListItem) => boardListItem.id === board.id\r\n                ? {\r\n                    ...boardListItem,\r\n                    columns: boardListItem.columns.filter((columnsItem) => columnsItem.id !== columnId)\r\n                }\r\n                : boardListItem\r\n            ))\r\n    };\r\n    const handleDragEnd = ({destination, source}) => {\r\n        if (!destination) {\r\n            return;\r\n        }\r\n        if (destination.index === source.index && destination.droppableId === source.droppableId) {\r\n            return;\r\n        }\r\n        const itemCopy = board.columns.find((column) => column.name + column.id === source.droppableId).cards[source.index];\r\n        setNewBoard(prev => {\r\n            prev.map((b) => b.id === board.id\r\n                ? {\r\n                    ...b,\r\n                    columns: b.columns.find((column) => column.name + column.id === source.droppableId).cards.splice(source.index, 1)\r\n                }\r\n                : b\r\n            );\r\n            prev.map((b) => b.id === board.id\r\n                ? {\r\n                    ...b,\r\n                    columns: b.columns.find((column) => column.name + column.id === destination.droppableId).cards.splice(destination.index, 0, itemCopy)\r\n                }\r\n                : b\r\n            );\r\n            return prev\r\n        });\r\n    };\r\n\r\n    const changeName = (e) => {\r\n        if (e.target.className === \"todoContent\" && boardList.length > 0 && isChangeBoardName && activeBoardName.length > 0) {\r\n            changeBoardName()\r\n        }\r\n    };\r\n    return (\r\n        <div onClick={changeName} className=\"todoContent\">\r\n            <DragDropContext onDragEnd={handleDragEnd}>\r\n                {board.columns && board.columns.map((column) => {\r\n                        return (\r\n                            <TodoColumn key={column.id} board={board}\r\n                                        boardList={boardList}\r\n                                        column={column} setNewBoard={setNewBoard}\r\n                                        deleteColumn={deleteColumn}/>\r\n                        )\r\n                    }\r\n                )}\r\n            </DragDropContext>\r\n            {!addList && board.columns.length === 0 &&\r\n            <div onClick={() => setAddList(true)} className=\"todoContent__add\">\r\n                Add new list\r\n            </div>}\r\n            {!addList && board.columns.length > 0 &&\r\n            <div onClick={() => setAddList(true)} className=\"todoContent__add\">\r\n                Add another one column\r\n            </div>}\r\n            {addList && <div className=\"todoContent__input\">\r\n                <input placeholder=\"Enter a list title\"\r\n                       maxLength={15}\r\n                       ref={newColumnNameRef}\r\n                       onKeyDown={(e) => addAnotherColumn(e)}\r\n                       value={inputValue}\r\n                       onChange={(e) => setInputValue(e.target.value.replace(/\\s+/g, ' '))} type=\"text\"/>\r\n                <div>\r\n                    <button onClick={(e) => addAnotherColumn(e)}>Add list</button>\r\n                </div>\r\n            </div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoBoard;","import React, {useEffect, useRef, useState} from 'react';\r\nimport './style.scss'\r\nimport TodoBoard from \"./TodoBoard\";\r\nimport {Redirect, Route, Switch} from \"react-router\";\r\nimport {Link, NavLink} from \"react-router-dom\";\r\nimport {Home, ShowBoards} from \"../../SVG/SVG\";\r\n\r\nlet boardId = 1;\r\n\r\nconst Todo = ({history}) => {\r\n    const [showBoards, setShowBoard] = useState(false);\r\n    const [boardNameValue, setBoardNameValue] = useState('');\r\n    const [board, setBoard] = useState(false);\r\n    const [boardList, setNewBoard] = useState([]);\r\n    const [activeBoardName, setActiveBoardName] = useState('Todo');\r\n    const [activeBoardId, setActiveBoardId] = useState('');\r\n    const [isChangeBoardName, setChangeBoardName] = useState(false);\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [addList, setAddList] = useState(false);\r\n    const createCardInputRef = useRef();\r\n    const changeBoardNameRef = useRef();\r\n    useEffect(() => {\r\n        createCardInputRef.current && createCardInputRef.current.select()\r\n    }, [board]);\r\n    useEffect(() => {\r\n        changeBoardNameRef.current && changeBoardNameRef.current.select();\r\n    }, [isChangeBoardName]);\r\n    const addNewBoard = (e) => {\r\n        if ((boardNameValue.length > 0 && boardNameValue !== \" \" && e.key === \"Enter\") || (boardNameValue.length > 0 && boardNameValue !== \" \" && e.type === \"click\")) {\r\n            setNewBoard([...boardList, {name: boardNameValue, id: boardId++, columns: []}]);\r\n            setBoard(false);\r\n            setBoardNameValue('')\r\n        }\r\n    };\r\n    const closeCreateInput = (e) => {\r\n        if (boardList.length > 0) {\r\n            e.target.parentNode.className === \"todoHeader__nav\" || e.target.parentNode.parentNode.parentNode.className === \"todoHeader__nav\" ? setShowBoard(true) : setShowBoard(false);\r\n        }\r\n        if (e.target.className === \"todo\" || e.target.className === \"todoContent\" || e.target.className === \"todoHeader__name\" || e.target.className === \"todoContent__boardName\") {\r\n            setBoard(false);\r\n            setAddList(false);\r\n            setBoardNameValue(boardNameValue);\r\n        }\r\n    };\r\n    const isActiveBoard = (boardName) => {\r\n        setActiveBoardName(boardName)\r\n    };\r\n    const changeBoardName = (e) => {\r\n        if (activeBoardName.length > 0&&activeBoardName!==\" \") {\r\n            setNewBoard(boardList.map((boardListItem) =>\r\n                boardListItem.id === activeBoardId ? {\r\n                        ...boardListItem,\r\n                        name: activeBoardName\r\n                    }\r\n                    : boardListItem));\r\n            history.push(`/todo/${activeBoardName.replace(/\\s+/g, '').toLowerCase()}${activeBoardId}`);\r\n            setActiveBoardName(activeBoardName);\r\n            setChangeBoardName(false);\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <div onClick={(e) => closeCreateInput(e)} className=\"todo\">\r\n            <div className=\"todoHeader\">\r\n                {showBoards\r\n                    ? <div className=\"todoHeader__boardsList\">{boardList?.map((board) => (\r\n                        <NavLink activeClassName={\"activeBoard\"} key={board.id}\r\n                                 to={`/todo/${board.name.replace(/\\s+/g, '').toLowerCase()}${board.id}`}>\r\n                            <span className=\"todoHeader__board\">{board.name}</span>\r\n                        </NavLink>))}\r\n                    </div>\r\n                    : <div>\r\n                        <div className=\"todoHeader__title\">\r\n                                <span className=\"todoHeader__nav\">\r\n                                    <Link to={\"/\"}>\r\n                                        <Home width={\"70px\"} height={\"20px\"}/>\r\n                                    </Link>\r\n                                        <ShowBoards onClick={() => setShowBoard(true)} height={\"20px\"} width={\"100px\"}/>\r\n                                </span>\r\n                            {!isChangeBoardName &&\r\n                            <h1 onClick={() => activeBoardName !== \"Todo\" && setChangeBoardName(true)}>{activeBoardName}</h1>}\r\n                            {isChangeBoardName\r\n                            && <div className=\"todoHeader__change\">\r\n                                <textarea  ref={changeBoardNameRef} maxLength={30} spellCheck={false}\r\n                                          value={activeBoardName} onChange={(e) => setActiveBoardName(e.target.value.replace(/\\s+/g, ' '))}/>\r\n                                <span onClick={changeBoardName}>\r\n                                    Change\r\n                                </span>\r\n                            </div>}\r\n                        </div>\r\n                    </div>\r\n                }\r\n                <div className=\"todoHeader__name\">\r\n                    {board\r\n                        ? <div className=\"todoHeader__addNewBoard\">\r\n                            <input\r\n                                maxLength={20}\r\n                                type=\"text\"\r\n                                ref={createCardInputRef}\r\n                                autoFocus={true}\r\n                                value={boardNameValue}\r\n                                onKeyDown={(e) => addNewBoard(e)}\r\n                                onChange={(e) => setBoardNameValue(e.target.value.replace(/\\s+/g, ' '))}\r\n                            />\r\n                            <button onClick={(e) => addNewBoard(e)}>Create board</button>\r\n                        </div>\r\n                        : <span onClick={() => setBoard(true)} className=\"todoHeader__add\">Create Board</span>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <Switch>\r\n                {boardList.map((board) => <Route key={board.id}\r\n                                                 path={`/todo/${board.name.replace(/\\s+/g, '').toLowerCase()}${board.id}`}\r\n                                                 render={() => <TodoBoard\r\n                                                     board={board} boardList={boardList}\r\n                                                     inputValue={inputValue} setInputValue={setInputValue}\r\n                                                     setNewBoard={setNewBoard}\r\n                                                     addList={addList} setAddList={setAddList}\r\n                                                     isActiveBoard={isActiveBoard}\r\n                                                     activeBoardName={activeBoardName}\r\n                                                     changeBoardName={changeBoardName}\r\n                                                     isChangeBoardName={isChangeBoardName}\r\n                                                     setActiveBoardId={setActiveBoardId}\r\n\r\n                                                 />}/>)}\r\n                {boardList.length === 1 &&\r\n                <Redirect to={`/todo/${boardList[0].name.replace(/\\s+/g, '').toLowerCase()}${boardList[0].id}`}/>}\r\n            </Switch>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Todo;","import React from 'react';\r\nimport './Style.scss'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst MainPage = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <div className=\"mainLogo\">\r\n                <img src=\"https://res.cloudinary.com/minak/image/upload/v1595687487/GroWitHead/GroWitHead_hqtaos.png\" alt=\"Logo\"/>\r\n            </div>\r\n            <div className=\"mainList\">\r\n                <Link to={'/todo'}>\r\n                    <div className=\"mainList__choice todo\">\r\n                        Todo\r\n                    </div>\r\n                </Link>\r\n                <Link to={'/learning'}>\r\n                    <div className=\"mainList__choice learning\">\r\n                        Learning\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainPage;","import React from 'react';\r\nimport {Route, Switch} from \"react-router\";\r\nimport './Style.scss'\r\n\r\nimport Learning from \"../Learning/Learning\";\r\nimport Todo from \"../Todo/Todo\";\r\nimport MainPage from \"../MainPage/MainPage\";\r\n\r\nconst App = () => {\r\n\r\n    return (\r\n        <div className=\"app\">\r\n                    <Switch>\r\n                        <Route path={'/'} component={MainPage} exact/>\r\n                        <Route path={'/learning/:category?/:text?'} component={Learning}/>\r\n                        <Route path={'/todo/:name?'} component={Todo}/>\r\n                    </Switch>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nimport App from \"./Components/App/App\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <App/>\n    </BrowserRouter>,\ndocument.getElementById('root')\n)\n;\n"],"sourceRoot":""}