{"version":3,"sources":["Components/Learning/Layout/ListLayout.js","SVG/SVG.js","Functions.js","Components/Learning/Category.js","Components/Learning/Subjects.js","Components/Styled/ShowHideLearnText/ShowHideLearnText.js","Components/Learning/Text/TextItem.js","Components/Learning/Text/Text.js","Reducers/LearningReducer.js","Components/Learning/Learning.js","Components/Styled/TodoItemStyled/CardNameStyled.js","Components/Todo/TodoCard.js","Components/Todo/TodoColumn.js","Components/Todo/TodoBoard.js","Components/Todo/Todo.js","Components/MainPage/MainPage.js","Components/App/App.js","index.js"],"names":["replaced","name","space","replace","ListLayout","newItem","inputValue","setInputValue","addItem","inputRef","useRef","useEffect","current","select","className","SwitchTransition","component","CSSTransition","key","timeout","appear","classNames","type","ref","autoFocus","value","onKeyDown","e","onChange","target","Close","width","height","viewBox","d","fill","ResizeShow","ResizeHide","EditDone","Delete","Done","Important","ShowBoards","closeInput","setNewItem","nodeName","handleDragEnd","dispatch","item","draggableId","destination","subjectId","itemCopy","find","i","id","payload","subjectCopy","finishIndex","index","categoryCopy","idCategory","Category","memo","subject","useState","newCategory","setNewCategory","onClick","length","slice","onDragEnd","source","droppableId","category","categoryId","provided","innerRef","droppableProps","map","provider","draggableProps","dragHandleProps","to","idSubject","Subjects","subjects","newSubject","setNewSubject","subjectName","SectionTextStyles","styled","div","show","props","textAdded","SectionText","children","TextItem","text","setText","focusText","setFocusText","setShow","textId","categoryTextChanged","spellCheck","onFocus","idText","Text","newCategoryTextTitle","setNewCategoryTextTitle","learningReducer","state","filter","remainingSubjects","remainCategories","newCategoriesPosition","withRouter","match","params","useReducer","TransitionGroup","exit","path","render","CardNameStyles","span","important","done","CardNameStyled","TodoCard","card","deleteCard","importantCard","cardDone","change","setChange","changeInputValue","setChangeInputValue","changeInputRef","focus","changeCardName","deleteItem","setImportant","setDone","onDoubleClick","onBlur","cardId","TodoColumn","board","boardList","column","setNewBoard","addImportantDone","isImportant","importantCardId","isDone","doneCardId","boardListItem","columns","columnsItem","cards","inputCardValue","setInputCardValue","addCard","setAddCard","changeColumnValue","setColumnValue","newColumnName","setNewColumnName","columnNameRef","columnCardNameRef","addNewCard","undefined","changeColumnName","columnId","style","placeholder","listId","TodoBoard","addList","setAddList","isActiveBoard","newColumnNameRef","addAnotherColumn","prev","b","splice","boardId","Todo","showBoards","setShowBoard","boardNameValue","setBoardNameValue","setBoard","activeBoardName","setActiveBoardName","createCardInputRef","addNewBoard","boardName","tagName","closeCreateInput","toLowerCase","MainPage","src","alt","App","exact","Learning","ReactDOM","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.758f59d0.chunk.js","sourcesContent":["import React, {useEffect, useRef} from 'react';\r\nimport '../Style.scss'\r\nimport {CSSTransition, SwitchTransition} from \"react-transition-group\";\r\n\r\n\r\nexport const replaced = (name, space) => {\r\n    return name.replace(/\\s+/g, space ? ' ' : '')\r\n};\r\n\r\nconst ListLayout = ({newItem, inputValue, setInputValue, addItem}) => {\r\n\r\n    const inputRef = useRef();\r\n    useEffect(() => {\r\n        inputRef.current && inputRef.current.select()\r\n    },[newItem]);\r\n    return (\r\n        <div className='learningList__item'>\r\n            <div className=\"learningList__add\">\r\n                {newItem\r\n                && <SwitchTransition component={false}>\r\n                    <CSSTransition key={true} timeout={300} appear={true} classNames={'animInput'}>\r\n                        <input type=\"text\" ref={inputRef} autoFocus={true} value={inputValue}\r\n                               onKeyDown={(e) => {\r\n                                   addItem(e)\r\n                               }}\r\n                               onChange={(e) => setInputValue(replaced(e.target.value, true))}/>\r\n                    </CSSTransition>\r\n                </SwitchTransition>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ListLayout;","import React from \"react\";\r\n//Learning\r\nexport const Close = ({width, height}) => {\r\n    return (\r\n        <svg height={height} viewBox=\"0 0 512 512\" width={width}>\r\n            <path\r\n                d=\"m347.429688 365.714844c-4.679688 0-9.359376-1.785156-12.929688-5.359375l-182.855469-182.855469c-7.144531-7.144531-7.144531-18.714844 0-25.855469 7.140625-7.140625 18.714844-7.144531 25.855469 0l182.855469 182.855469c7.144531 7.144531 7.144531 18.714844 0 25.855469-3.570313 3.574219-8.246094 5.359375-12.925781 5.359375zm0 0\"\r\n                fill=\"black\"/>\r\n            <path\r\n                d=\"m164.570312 365.714844c-4.679687 0-9.355468-1.785156-12.925781-5.359375-7.144531-7.140625-7.144531-18.714844 0-25.855469l182.855469-182.855469c7.144531-7.144531 18.714844-7.144531 25.855469 0 7.140625 7.140625 7.144531 18.714844 0 25.855469l-182.855469 182.855469c-3.570312 3.574219-8.25 5.359375-12.929688 5.359375zm0 0\"\r\n                fill=\"black\"/>\r\n        </svg>\r\n\r\n    )\r\n};\r\nexport const ResizeShow = ({width, height}) => {\r\n    return (\r\n        <svg height={height} viewBox=\"0 0 512 512\" width={width}>\r\n            <path d=\"M492,0H344.212c-11.046,0-20,8.954-20,20s8.954,20,20,20h99.503L283.394,200.322c-7.811,7.811-7.811,20.474,0,28.284\r\n                         c7.81,7.81,20.473,7.811,28.284,0L472,68.284v99.503c0,11.046,8.954,20,20,20c11.046,0,20-8.954,20-20V20\r\n                         C512,9.115,503.154,0,492,0z\"/>\r\n            <path d=\"M228.606,283.394c-7.811-7.81-20.474-7.811-28.284,0L40,443.716v-99.503c0-11.046-8.954-20-20-20s-20,8.954-20,20V492\r\n                         c0,10.866,8.853,20,20,20h147.788c11.046,0,20-8.954,20-20c0-11.046-8.954-20-20-20H68.284l160.322-160.322\r\n                         C236.417,303.867,236.417,291.204,228.606,283.394z\"/>\r\n        </svg>\r\n    )\r\n};\r\nexport const ResizeHide = ({width, height}) => {\r\n    return (\r\n        <svg height={height} viewBox=\"0 0 512 512\" width={width}>\r\n            <path\r\n                d=\"M297.536 234.464L445.324 234.464C456.37 234.464 465.324 225.51 465.324 214.464C465.324 203.418 456.37 194.464 445.324 194.464L345.821 194.464L506.142 34.1419C513.953 26.3309 513.953 13.6679 506.142 5.85789C498.332 -1.95211 485.669 -1.95311 477.858 5.85789L317.536 166.18L317.536 66.6769C317.536 55.6309 308.582 46.6769 297.536 46.6769C286.49 46.6769 277.536 55.6309 277.536 66.6769L277.536 214.464C277.536 225.349 286.382 234.464 297.536 234.464Z\"\r\n                fill=\"black\"/>\r\n            <path\r\n                d=\"M5.85835 506.142C13.6694 513.952 26.3323 513.953 34.1423 506.142L194.464 345.82L194.464 445.323C194.464 456.369 203.418 465.323 214.464 465.323C225.51 465.323 234.464 456.369 234.464 445.323L234.464 297.536C234.464 286.67 225.611 277.536 214.464 277.536L66.6763 277.536C55.6303 277.536 46.6763 286.49 46.6763 297.536C46.6763 308.582 55.6303 317.536 66.6763 317.536L166.18 317.536L5.85835 477.858C-1.95265 485.669 -1.95265 498.332 5.85835 506.142Z\"\r\n                fill=\"black\"/>\r\n        </svg>\r\n\r\n\r\n    )\r\n};\r\nexport const EditDone = ({width, height}) => {\r\n    return (\r\n        <svg height={height} viewBox=\"0 0 512 512\" width={width}>\r\n            <path d=\"M36.573,309.292h2.09l100.833-21.943c1.964-0.327,3.784-1.237,5.224-2.612L315.56,113.896\r\n    c12.48-12.453,19.443-29.391,19.331-47.02c0.023-17.766-6.917-34.833-19.331-47.543C303.108,6.853,286.17-0.11,268.54,0.003\r\n    c-17.742-0.157-34.76,7.028-47.02,19.853L51.201,190.696c-1.502,1.209-2.597,2.85-3.135,4.702L26.124,296.231\r\n    c-0.599,3.62,0.565,7.308,3.135,9.927C31.188,308.126,33.817,309.253,36.573,309.292z M268.54,20.901\r\n    c25.103-0.002,45.454,20.347,45.456,45.45c0,0.175-0.001,0.35-0.003,0.525c0.171,11.959-4.547,23.47-13.061,31.869\r\n    l-64.261-64.784C245.137,25.548,256.604,20.848,268.54,20.901z M222.042,49.113l64.261,64.261L137.405,261.749l-64.261-63.739\r\n    L222.042,49.113z M64.785,218.909l51.722,51.722L50.156,285.26L64.785,218.909z\"/>\r\n            <path d=\"M368.328,365.717H18.287c-5.771,0-10.449,4.678-10.449,10.449s4.678,10.449,10.449,10.449h350.041\r\n    c5.771,0,10.449-4.678,10.449-10.449S374.099,365.717,368.328,365.717z\"/>\r\n        </svg>\r\n\r\n    )\r\n};\r\n\r\n\r\n//Todo\r\n\r\nexport const Delete = ({height, width}) => {\r\n    return (\r\n        <svg height={height} viewBox=\"0 0 512 512\" width={width}>\r\n            <path\r\n                d=\"m256 512c-141.164062 0-256-114.835938-256-256s114.835938-256 256-256 256 114.835938 256 256-114.835938 256-256 256zm0-480c-123.519531 0-224 100.480469-224 224s100.480469 224 224 224 224-100.480469 224-224-100.480469-224-224-224zm0 0\"/>\r\n            <path\r\n                d=\"m176.8125 351.1875c-4.097656 0-8.195312-1.554688-11.308594-4.691406-6.25-6.25-6.25-16.382813 0-22.632813l158.398438-158.402343c6.253906-6.25 16.386718-6.25 22.636718 0s6.25 16.382812 0 22.636718l-158.402343 158.398438c-3.15625 3.136718-7.25 4.691406-11.324219 4.691406zm0 0\"/>\r\n            <path\r\n                d=\"m335.1875 351.1875c-4.09375 0-8.191406-1.554688-11.304688-4.691406l-158.398437-158.378906c-6.253906-6.25-6.253906-16.382813 0-22.632813 6.25-6.253906 16.382813-6.253906 22.632813 0l158.398437 158.398437c6.253906 6.25 6.253906 16.382813 0 22.632813-3.132813 3.117187-7.230469 4.671875-11.328125 4.671875zm0 0\"/>\r\n        </svg>\r\n    )\r\n};\r\nexport const Done = ({height, width}) => {\r\n    return (\r\n        <svg height={height} viewBox=\"0 0 512 512\" width={width}>\r\n            <path\r\n                d=\"m234.667969 469.339844c-129.386719 0-234.667969-105.277344-234.667969-234.664063s105.28125-234.6679685 234.667969-234.6679685c44.992187 0 88.765625 12.8203125 126.589843 37.0976565 7.425782 4.78125 9.601563 14.679687 4.820313 22.125-4.796875 7.445312-14.675781 9.597656-22.121094 4.820312-32.640625-20.972656-70.441406-32.042969-109.289062-32.042969-111.746094 0-202.667969 90.921876-202.667969 202.667969 0 111.742188 90.921875 202.664063 202.667969 202.664063 111.742187 0 202.664062-90.921875 202.664062-202.664063 0-6.679687-.320312-13.292969-.9375-19.796875-.851562-8.8125 5.589844-16.621094 14.378907-17.472656 8.832031-.8125 16.617187 5.589844 17.472656 14.378906.722656 7.53125 1.085937 15.167969 1.085937 22.890625 0 129.386719-105.277343 234.664063-234.664062 234.664063zm0 0\"/>\r\n            <path\r\n                d=\"m261.332031 288.007812c-4.09375 0-8.191406-1.558593-11.304687-4.691406l-96-96c-6.25-6.253906-6.25-16.386718 0-22.636718s16.382812-6.25 22.632812 0l84.695313 84.695312 223.335937-223.339844c6.253906-6.25 16.386719-6.25 22.636719 0s6.25 16.382813 0 22.632813l-234.667969 234.667969c-3.136718 3.113281-7.230468 4.671874-11.328125 4.671874zm0 0\"/>\r\n        </svg>\r\n    )\r\n};\r\nexport const Important = ({height, width}) => {\r\n    return (\r\n        <svg height={height} viewBox=\"0 0 512 512\" width={width}>\r\n            <path\r\n                d=\"m277.332031 384c0 11.78125-9.550781 21.332031-21.332031 21.332031s-21.332031-9.550781-21.332031-21.332031 9.550781-21.332031 21.332031-21.332031 21.332031 9.550781 21.332031 21.332031zm0 0\"/>\r\n            <path\r\n                d=\"m256 320c-8.832031 0-16-7.167969-16-16v-181.332031c0-8.832031 7.167969-16 16-16s16 7.167969 16 16v181.332031c0 8.832031-7.167969 16-16 16zm0 0\"/>\r\n            <path\r\n                d=\"m256 512c-141.164062 0-256-114.835938-256-256s114.835938-256 256-256 256 114.835938 256 256-114.835938 256-256 256zm0-480c-123.519531 0-224 100.480469-224 224s100.480469 224 224 224 224-100.480469 224-224-100.480469-224-224-224zm0 0\"/>\r\n        </svg>\r\n    )\r\n};\r\nexport const ShowBoards = ({height, width}) => {\r\n    return (\r\n        <svg height={height} viewBox=\"0 0 512 512\" width={width}>\r\n            <path d=\"M224.057,512v-30.046c74.554,0,135.208-60.654,135.208-135.208s-60.654-135.208-135.208-135.208\r\n\t            h-45.069v41.276L52.581,126.407L178.988,0v41.276h45.069c62.868,0,121.971,24.482,166.426,68.936s68.936,103.558,68.936,166.426\r\n\t            s-24.482,121.971-68.936,166.426S286.925,512,224.057,512z\"/>\r\n            <path d=\"M390.483,110.212c-44.454-44.453-103.558-68.936-166.426-68.936h-45.069V0L52.581,126.407h171.477\r\n\t            c102.33,0,185.285,82.955,185.285,185.285s-82.955,185.285-185.285,185.285V512c62.868,0,121.971-24.482,166.426-68.936\r\n\t            s68.936-103.558,68.936-166.426S434.938,154.667,390.483,110.212z\"/>\r\n        </svg>\r\n\r\n    )\r\n};","\r\nexport const closeInput = (e, newItem, setNewItem) => {\r\n    if (newItem && e.target.nodeName !== \"INPUT\") {\r\n        setNewItem(false)\r\n    }\r\n};\r\n\r\nexport const handleDragEnd = (dispatch,item,draggableId,destination,type,subjectId) => {\r\n    const itemCopy = item.find((i) => i.name+i.id === draggableId);\r\n  switch (type) {\r\n      case \"subjects\":\r\n          return (\r\n              dispatch({\r\n                  type: \"CHANGE_SUBJECT_ORDER\",\r\n                  payload: {\r\n                      subjectCopy: itemCopy,\r\n                      finishIndex: destination.index\r\n                  }\r\n              })\r\n          );\r\n      case \"categories\":\r\n          return (\r\n              dispatch({\r\n                  type: \"CHANGE_CATEGORY_ORDER\",\r\n                  payload: {\r\n                      categoryCopy: itemCopy,\r\n                      finishIndex: destination.index,\r\n                      subjectId:subjectId\r\n                  }\r\n              })\r\n          );\r\n      default:\r\n          return null\r\n\r\n  }\r\n};","import React, {memo, useState} from 'react';\r\nimport './Style.scss'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport ListLayout, {replaced} from \"./Layout/ListLayout\";\r\nimport {Close} from \"../../SVG/SVG\";\r\nimport {DragDropContext, Draggable, Droppable} from \"react-beautiful-dnd\";\r\nimport {closeInput, handleDragEnd} from \"../../Functions\";\r\n\r\nlet idCategory = 4000;\r\n\r\nconst Category = memo(({subject, dispatch}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [newCategory, setNewCategory] = useState(false);\r\n    const addCategory = (e) => {\r\n        if ((inputValue.length > 0 && e.key === \"Enter\") || (inputValue.length > 0 && e.target.nodeName === \"BUTTON\")) {\r\n            dispatch({\r\n                type: \"ADD_NEW_CATEGORY\",\r\n                payload:\r\n                    {\r\n                        subjectId: subject.id,\r\n                        newCategory: inputValue,\r\n                        categoryId: idCategory++\r\n                    }\r\n            });\r\n            setNewCategory(false);\r\n            setInputValue('')\r\n        }\r\n    };\r\n    const deleteItem = (id) => {\r\n        dispatch({\r\n            type: \"DELETE_CATEGORY_ITEM\",\r\n            payload: {\r\n                subjectId: subject.id,\r\n                categoryId: id,\r\n            }\r\n        })\r\n    };\r\n    const categoryDragEnd = ({draggableId, destination,source}) => {\r\n        if (!destination) {\r\n            return;\r\n        }\r\n        if (destination.droppableId !== source.droppableId) {\r\n            return;\r\n        }\r\n        handleDragEnd(dispatch, subject.category, draggableId, destination, \"categories\",subject.id)\r\n    };\r\n    return (\r\n        <div className=\"learningCategory\" onClick={(e) => {\r\n            closeInput(e, newCategory, setNewCategory)\r\n        }}>\r\n            <div onClick={() => setNewCategory(true)} className=\"learningHeader\">\r\n                {subject.name.length > 20 ? subject.name.slice(0, 20) + \"...\" : subject.name}\r\n            </div>\r\n            <DragDropContext onDragEnd={categoryDragEnd}>\r\n                <div className='learningList'>\r\n                    <div className=\"learningList__add\">\r\n                        <ListLayout newItem={newCategory}\r\n                                    inputValue={inputValue} setInputValue={setInputValue}\r\n                                    addItem={addCategory}/>\r\n                    </div>\r\n                    <Droppable droppableId={\"categoryList\"}>\r\n                        {(provided) => {\r\n                            return (\r\n                                <ul\r\n                                    ref={provided.innerRef}\r\n                                    {...provided.droppableProps}\r\n                                    className='learningList__list'>\r\n                                    {subject.category.length > 0 && subject.category.map((item,index) =>\r\n                                            <Draggable\r\n                                                key={item.id}\r\n                                                index={index}\r\n                                                draggableId={item.name+item.id}>\r\n                                                {(provider)=>{\r\n                                                    return(\r\n                                                        <li\r\n                                                            ref={provider.innerRef}\r\n                                                            {...provider.draggableProps}\r\n                                                            {...provider.dragHandleProps}>\r\n                                                            <NavLink\r\n                                                                to={`/learning/${replaced(subject.name)}${subject.id}/${replaced(item.name)}${item.id}`}>\r\n                                                                {item.name.length > 30 ? item.name.slice(0, 30) + \"...\" : item.name}\r\n                                                            </NavLink>\r\n                                                            <span className=\"deleteItem\" onClick={() => deleteItem(item.id)}><Close/></span>\r\n                                                        </li>\r\n                                                    )\r\n                                                }}\r\n                                            </Draggable>\r\n                                    )}\r\n                                </ul>\r\n                            )\r\n                        }}\r\n                    </Droppable>\r\n                </div>\r\n            </DragDropContext>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Category;","import React, {useState} from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport ListLayout, {replaced} from \"./Layout/ListLayout\";\r\nimport {Close} from \"../../SVG/SVG\";\r\nimport {DragDropContext, Draggable, Droppable} from \"react-beautiful-dnd\";\r\nimport {closeInput, handleDragEnd} from \"../../Functions\";\r\n\r\n\r\nlet idSubject = 3000;\r\n\r\n\r\nconst Subjects = ({dispatch, subjects}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [newSubject, setNewSubject] = useState(false);\r\n\r\n    const addSubject = (e) => {\r\n        if ((inputValue.length > 0 && e.key === \"Enter\") || (inputValue.length > 0 && e.target.nodeName === \"BUTTON\")) {\r\n            dispatch({\r\n                type: \"ADD_NEW_SUBJECT\",\r\n                payload: {\r\n                    id: idSubject++,\r\n                    subjectName: inputValue\r\n                },\r\n\r\n            });\r\n            setNewSubject(false);\r\n            setInputValue('')\r\n        }\r\n    };\r\n    const deleteItem = (id) => {\r\n        dispatch({\r\n            type: \"DELETE_SUBJECT_ITEM\",\r\n            payload: {\r\n                subjectId: id,\r\n            }\r\n        })\r\n    };\r\n    const subjectDragEnd = ({draggableId, destination,source}) => {\r\n        if (!destination) {\r\n            return;\r\n        }\r\n        if (destination.droppableId !== source.droppableId) {\r\n            return;\r\n        }\r\n        handleDragEnd(dispatch,subjects,draggableId,destination,\"subjects\")\r\n    };\r\n    return (\r\n        <div className=\"learningSubjects\" onClick={(e) => closeInput(e, newSubject, setNewSubject)}>\r\n            <NavLink to={'/learning'}>\r\n                <div onClick={() => setNewSubject(true)} className=\"learningHeader\">\r\n                    Learning\r\n                </div>\r\n            </NavLink>\r\n            <DragDropContext onDragEnd={subjectDragEnd}>\r\n                <div className='learningList'>\r\n                    <ListLayout newItem={newSubject}\r\n                                inputValue={inputValue} setInputValue={setInputValue}\r\n                                addItem={addSubject}/>\r\n                    <Droppable droppableId={\"subjectList\"}>\r\n                        {(provided) => {\r\n                            return (\r\n                                <ul ref={provided.innerRef}\r\n                                    {...provided.droppableProps}\r\n                                    className='learningList__list'>\r\n                                    {subjects && subjects.map((subject, index) => {\r\n                                            return (\r\n                                                <Draggable\r\n                                                    key={subject.id}\r\n                                                    index={index}\r\n                                                    draggableId={subject.name+subject.id}\r\n                                                >\r\n                                                    {(provider) => {\r\n                                                        return (\r\n                                                            <li\r\n                                                                ref={provider.innerRef}\r\n                                                                {...provider.draggableProps}\r\n                                                                {...provider.dragHandleProps}\r\n                                                            >\r\n                                                                <NavLink\r\n                                                                    to={`/learning/${replaced(subject.name)}${subject.id}`}>\r\n                                                                    {subject.name.length > 20 ? subject.name.slice(0, 20) + \"...\" : subject.name}\r\n                                                                </NavLink>\r\n                                                                <span className=\"deleteItem\"\r\n                                                                      onClick={() => deleteItem(subject.id)}><Close/></span>\r\n                                                            </li>\r\n                                                        )\r\n                                                    }}\r\n                                                </Draggable>\r\n                                            )\r\n                                        }\r\n                                    )}\r\n                                </ul>\r\n                            )\r\n                        }}\r\n                    </Droppable>\r\n                </div>\r\n            </DragDropContext>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Subjects","import styled from \"styled-components\";\r\nimport React from \"react\";\r\n\r\nconst SectionTextStyles = styled.div`\r\nposition:${({show}) => show ? \"absolute\" : \"static\"};\r\ntop:0;\r\nright:0;\r\nleft:0;\r\nbottom:0;\r\nwidth:100%;\r\nheight:${({show}) => show ? \"80%\" : \"45px\"};\r\nborder-radius:${({show}) => show ? \"0px\" : \"10px\"};\r\nz-index:${({show}) => show ? \"1\" : \"0\"};\r\n\r\n.textItemHeader {\r\n  display:flex;\r\n  justify-content: space-between;\r\n  background-color: #5843BE;\r\n  border-radius: ${({show}) => show ? \"0\" : \"15px\"};;\r\n  border-top-left-radius: 15px;\r\n  border-bottom-left-radius: 15px;\r\n  align-items: center;\r\n  position: relative;\r\n  height: 45px;\r\n  width:${({show}) => show ? \"190px\" : \"100%\"};\r\n  transform: ${({show}) => show ? \"translateX(600px)\" : \"translateX(0)\"};\r\n  transition: all .3s; \r\n    &__wrapper{\r\n    width:100%;\r\n   background-color:\"white\";\r\n   border-radius:${({show}) => show ? \"0\" : \"15px\"};;\r\n    }\r\n  &__title {\r\n    margin-left: 10px;\r\n  }\r\n  \r\n  &__nav {\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n    position: absolute;\r\n    top: 2px;\r\n    right: 4px;\r\n\r\n    & span {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 17px;\r\n    height: 17px;\r\n    cursor: pointer;\r\n          & svg {\r\n        transition: all .2  s;\r\n        &:hover {\r\n          transform: scale(1.2);\r\n          transition: all .2    s;\r\n          & path {\r\n            fill: rgba(0, 0, 0, 0.7);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.textItemContent{\r\n    height: 100%;\r\n    & textarea{\r\n    height: 100%;\r\n    width: 100%;\r\n    overflow-y: auto;\r\n    overflow-x: hidden;\r\n    padding:10px;\r\n    border: none;\r\n    background-color: #fff3bf;\r\n    color: ${(props) => props.textAdded ? \"rgba(0, 0, 0, 0.44)\" : \"black\"};\r\n    resize: none;\r\n    outline: none;\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nexport const SectionText = ({children, show, textAdded}) => {\r\n    return <SectionTextStyles show={show} textAdded={textAdded}>{children}</SectionTextStyles>\r\n};\r\n","import React, {useState} from 'react';\r\nimport '../Style.scss'\r\nimport {SectionText} from \"../../Styled/ShowHideLearnText/ShowHideLearnText\";\r\nimport {Close, EditDone, ResizeHide, ResizeShow} from \"../../../SVG/SVG\";\r\n\r\nconst TextItem = ({dispatch, text, subject, category}) => {\r\n    const [inputValue, setInputValue] = useState(text.text);\r\n    const [textAdded, setText] = useState(false);\r\n    const [focusText, setFocusText] = useState(true);\r\n    const [show, setShow] = useState(false);\r\n    const addCategoryText = () => {\r\n        dispatch({\r\n            type: \"ADD_NEW_CATEGORY_TEXT\",\r\n            payload:\r\n                {\r\n                    subjectId: subject.id,\r\n                    categoryId: category.id,\r\n                    textId: text.id,\r\n                    categoryTextChanged: inputValue\r\n                }\r\n        });\r\n        setText(true);\r\n        setFocusText(false)\r\n    };\r\n    const deleteCategoryText = () => {\r\n        dispatch({\r\n            type: \"DELETE_CATEGORY_TEXT\",\r\n            payload:\r\n                {\r\n                    subjectId: subject.id,\r\n                    categoryId: category.id,\r\n                    textId: text.id\r\n                }\r\n        })\r\n    };\r\n\r\n\r\n    return (\r\n        <SectionText show={show} textAdded={textAdded}>\r\n            <div className=\"textItemHeader__wrapper\">\r\n                <div className=\"textItemHeader\">\r\n                <span\r\n                    className=\"textItemHeader__title\">{text.name.length > 10 ? text.name.slice(0, 10) + \"...\" : text.name}</span>\r\n                    <div className=\"textItemHeader__nav\">\r\n                        {show && <span onClick={() => setShow(false)}><ResizeHide width={\"11px\"} height={\"11px\"}/></span>}\r\n                        {show && <span onClick={addCategoryText}><EditDone width={\"13px\"} height={\"13px\"}/></span>}\r\n                        {!show && <span className=\"expandTextItem\" onClick={() => setShow(true)}><ResizeShow width={\"10px\"}\r\n                                                                                                             height={\"10px\"}/></span>}\r\n                        {!show && <span className=\"deleteTextItem\" onClick={deleteCategoryText}><Close width={\"17px\"}\r\n                                                                                                       height={\"17px\"}/></span>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {show && <div className=\"textItemContent\">\r\n                <textarea\r\n                    spellCheck={false}\r\n                    autoFocus={focusText}\r\n                    value={inputValue} onFocus={() => setText(false)}\r\n                    onChange={(e) => setInputValue(e.target.value)}/>\r\n            </div>}\r\n        </SectionText>\r\n    );\r\n};\r\n\r\nexport default TextItem;","import React, {useState} from 'react';\r\nimport TextItem from \"./TextItem\";\r\nimport ListLayout from \"../Layout/ListLayout\";\r\nimport {closeInput} from \"../../../Functions\";\r\n\r\nlet idText = 5000;\r\n\r\nconst Text = ({dispatch, subject, category}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [newCategoryTextTitle, setNewCategoryTextTitle] = useState(false);\r\n    const addCategoryText = (e) => {\r\n        if ((inputValue.length > 0 && e.key === \"Enter\") || (inputValue.length > 0 && e.target.nodeName === \"BUTTON\")) {\r\n            dispatch({\r\n                type: \"ADD_NEW_CATEGORY_TEXT_TITLE\",\r\n                payload:\r\n                    {\r\n                        subjectId: subject.id,\r\n                        categoryId: category.id,\r\n                        newCategoryTextTitle: inputValue,\r\n                        id: idText++\r\n                    }\r\n            });\r\n            setNewCategoryTextTitle(false);\r\n            setInputValue('')\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"learningText\" onClick={(e) => {\r\n            closeInput(e, newCategoryTextTitle, setNewCategoryTextTitle)\r\n        }}>\r\n                <div onClick={() => setNewCategoryTextTitle(true)} className=\"learningHeader\">\r\n                    {category.name.length > 30 ? category.name.slice(0, 30) + \"...\" : category.name}\r\n                </div>\r\n                <div className=\"learningText__window\">\r\n                        <div className='learningList'>\r\n                            <div className=\"learningList__add\">\r\n                                <ListLayout newItem={newCategoryTextTitle}\r\n                                            inputValue={inputValue} setInputValue={setInputValue}\r\n                                            addItem={addCategoryText}/>\r\n                            </div>\r\n                                <div className=\"learningText__list\">\r\n                                    {category.text.length > 0 && category.text.map((text) =>\r\n                                        <TextItem dispatch={dispatch} text={text} subject={subject} category={category}\r\n                                                  key={text.id}/>\r\n                                    )}\r\n                                </div>\r\n                        </div>\r\n                </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Text;","export const learningReducer = (state, {type, payload}) => {\r\n    switch (type) {\r\n        case \"ADD_NEW_SUBJECT\":\r\n            return [\r\n                ...state,\r\n                {\r\n                    name: payload.subjectName, id: payload.id,\r\n                    category: []\r\n                }\r\n            ];\r\n        case \"ADD_NEW_CATEGORY\":\r\n            return (\r\n                state.map((item) => item.id === payload.subjectId ? {\r\n                        ...item,\r\n                        category: [...item.category, {name: payload.newCategory, id: payload.categoryId, text: []}]\r\n                    }\r\n                    : item)\r\n            );\r\n        case \"ADD_NEW_CATEGORY_TEXT_TITLE\":\r\n            return (\r\n                state.map((item) => item.id === payload.subjectId ? {\r\n                        ...item,\r\n                        category: item.category.map((category) => category.id === payload.categoryId ? {\r\n                            ...category,\r\n                            text: [...category.text, {name: payload.newCategoryTextTitle, id: payload.id, text: ''},]\r\n                        } : category)\r\n                    }\r\n                    : item)\r\n            );\r\n        case \"ADD_NEW_CATEGORY_TEXT\":\r\n            return (\r\n                state.map((item) => item.id === payload.subjectId ? {\r\n                        ...item,\r\n                        category: item.category.map((category) => category.id === payload.categoryId ? {\r\n                                ...category,\r\n                                text: category.text.map((text) => text.id === payload.textId\r\n                                    ? {name: text.name, id: text.id, text: payload.categoryTextChanged}\r\n                                    : text)\r\n                            }\r\n                            : category)\r\n                    }\r\n                    : item)\r\n            );\r\n        case \"DELETE_SUBJECT_ITEM\":\r\n            return (\r\n                state.filter((item) => item.id !== payload.subjectId)\r\n            );\r\n        case \"DELETE_CATEGORY_ITEM\":\r\n            return (\r\n                state.map((item) => item.id === payload.subjectId\r\n                    ? {\r\n                        ...item,\r\n                        category: item.category.filter((category) => category.id !== payload.categoryId)\r\n                    }\r\n                    : item\r\n                )\r\n            );\r\n        case \"DELETE_CATEGORY_TEXT\":\r\n            return (\r\n                state.map((item) => item.id === payload.subjectId ? {\r\n                        ...item,\r\n                        category: item.category.map((category) => category.id === payload.categoryId ? {\r\n                                ...category,\r\n                                text: category.text.filter((text) => text.id !== payload.textId)\r\n                            }\r\n                            : category)\r\n                    }\r\n                    : item)\r\n            );\r\n        case \"CHANGE_SUBJECT_ORDER\":\r\n            const {subjectCopy} = payload;\r\n            const remainingSubjects = state.filter((subject) => subject.id !== subjectCopy.id);\r\n            return [\r\n                ...remainingSubjects.slice(0, payload.finishIndex),\r\n                subjectCopy,\r\n                ...remainingSubjects.slice(payload.finishIndex),\r\n            ];\r\n        case \"CHANGE_CATEGORY_ORDER\":\r\n            const {categoryCopy, subjectId} = payload;\r\n            const subjectCategories = state.find((item) => item.id === subjectId);\r\n            const remainCategories = subjectCategories.category.filter((category) => category.id !== categoryCopy.id);\r\n            const newCategoriesPosition = [\r\n                ...remainCategories.slice(0, payload.finishIndex),\r\n                categoryCopy,\r\n                ...remainCategories.slice(payload.finishIndex),\r\n            ];\r\n            return (\r\n                state.map((item) => item.id === subjectId\r\n                    ? {\r\n                        ...item,\r\n                        category: newCategoriesPosition\r\n                    }\r\n                    : item\r\n                )\r\n            );\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\n\r\n","import React, {useReducer} from 'react';\r\nimport './Style.scss'\r\nimport {Route, Switch, withRouter} from \"react-router-dom\";\r\nimport Category from \"./Category\";\r\nimport Subjects from \"./Subjects\";\r\nimport Text from \"./Text/Text\";\r\nimport {learningReducer} from \"../../Reducers/LearningReducer\";\r\nimport {CSSTransition, TransitionGroup} from \"react-transition-group\";\r\nimport {replaced} from \"./Layout/ListLayout\";\r\n\r\n\r\n\r\n\r\n\r\nconst Learning = (props) => {\r\n    const {match:{params:{category,text}}} = props;\r\n\r\n\r\n    const [state, dispatch] = useReducer(\r\n        learningReducer,\r\n        []\r\n    );\r\n\r\n\r\n    return (\r\n        <div className=\"learning\">\r\n            <Subjects dispatch={dispatch} subjects={state}/>\r\n            <TransitionGroup component={null}>\r\n                <CSSTransition key={category} exit={false} timeout={500} classNames={'animCategoryPage'}>\r\n                    <Switch>\r\n                        {state && state.map((subject) => <Route key={subject.id}\r\n                                                                path={`/learning/${replaced(subject.name)}${subject.id}/:text?`}\r\n                                                                render={() => <Category dispatch={dispatch}\r\n                                                                                        subject={subject}/>}/>)}\r\n                    </Switch>\r\n                </CSSTransition>\r\n            </TransitionGroup>\r\n            <TransitionGroup component={null}>\r\n                <CSSTransition key={text} exit={false} timeout={500} classNames={'animTextPage'}>\r\n                    <Switch>\r\n                        {state && state.map((subject) => subject.category.map((category) =>\r\n                            <Route\r\n                                path={`/learning/${replaced(subject.name)}${subject.id}/${replaced(category.name)}${category.id}`}\r\n                                render={() => <Text dispatch={dispatch} subject={subject} category={category}/>}/>))}\r\n                    </Switch>\r\n                </CSSTransition>\r\n            </TransitionGroup>\r\n\r\n        </div>\r\n    )\r\n        ;\r\n};\r\n\r\nexport default withRouter(Learning);","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst CardNameStyles = styled.span`\r\ncolor:${({important}) => important ? \"red\" : \"black\"};\r\nfont-weight:${({important}) => important ? \"900\" : \"300\"};\r\nfont-size:${({important}) => important ? \"14px\" : \"13px\"};\r\ntext-decoration: ${({done}) => done ? \"line-through\" : \"none\"};\r\nwidth:165px;\r\nword-wrap:break-word;\r\nwhite-space: normal;\r\n`;\r\nexport const CardNameStyled = ({children, important, done}) => {\r\n    return <CardNameStyles important={important} done={done}>{children}</CardNameStyles>\r\n};\r\n\r\n\r\n\r\n","import React, {memo, useEffect, useRef, useState} from 'react';\r\nimport './style.scss'\r\nimport {CardNameStyled} from \"../Styled/TodoItemStyled/CardNameStyled\";\r\nimport {Draggable} from \"react-beautiful-dnd\";\r\nimport {Delete, Done, Important} from \"../../SVG/SVG\";\r\n\r\nconst TodoCard = memo(({card, index, deleteCard, importantCard, cardDone}) => {\r\n    const [change, setChange] = useState(false);\r\n    const [changeInputValue, setChangeInputValue] = useState(card.name);\r\n    const changeInputRef = useRef(null);\r\n    useEffect(() => {\r\n        if (change) {\r\n            changeInputRef.current.focus();\r\n            changeInputRef.current.select();\r\n        }\r\n    }, [change]);\r\n    const changeCardName = () => {\r\n        if (changeInputValue !== \" \") {\r\n            card.name = changeInputValue;\r\n            setChangeInputValue(card.name);\r\n            setChange(false);\r\n        }\r\n        setChangeInputValue(card.name);\r\n        setChange(false);\r\n    };\r\n    const deleteItem = () => {\r\n        deleteCard(card.id);\r\n    };\r\n    const setImportant = () => {\r\n        importantCard(!card.important, card.id)\r\n    };\r\n    const setDone = () => {\r\n        cardDone(!card.done, card.id)\r\n    };\r\n\r\n\r\n    return (\r\n        <Draggable\r\n            key={card.id}\r\n            index={index}\r\n            draggableId={card.name + card.id}\r\n        >\r\n            {(provider) => {\r\n                return (\r\n                    <li\r\n                        ref={provider.innerRef}\r\n                        {...provider.draggableProps}\r\n                        {...provider.dragHandleProps}\r\n                        className=\"card\" onDoubleClick={() => setChange(true)}>\r\n                        {change && <textarea className=\"cardChange\" ref={changeInputRef} value={changeInputValue}\r\n                                             onChange={(e) => setChangeInputValue(e.target.value.replace(/\\s+/g, ' '))}\r\n                                             onBlur={changeCardName}/>}\r\n\r\n                        {!change &&\r\n                        <CardNameStyled important={card.important} done={card.done}>{card.name}</CardNameStyled>}\r\n                        {!change &&\r\n                        <div className=\"cardNav\">\r\n                            <span className=\"cardNav__important\" onClick={setImportant}>\r\n                                <Important height={card.important ? \"17px\" : \"15px\"}\r\n                                           width={card.important ? \"17px\" : \"15px\"}/>\r\n                            </span>\r\n                            <span className=\"cardNav__done\" onClick={setDone}>\r\n                                <Done height={card.done ? \"17px\" : \"15px\"}\r\n                                      width={card.done ? \"17px\" : \"15px\"}/>\r\n                            </span>\r\n                            <span className=\"cardNav__delete\" onClick={deleteItem}>\r\n                                <Delete width={\"15px\"} height={\"15px\"}/>\r\n                            </span>\r\n                        </div>}\r\n                    </li>\r\n                )\r\n            }}\r\n        </Draggable>\r\n    );\r\n})\r\n\r\nexport default TodoCard;\r\n\r\n\r\n\r\n","import React, {memo, useEffect, useRef, useState} from 'react';\r\nimport './style.scss'\r\nimport TodoCard from \"./TodoCard\";\r\nimport {Droppable} from \"react-beautiful-dnd\";\r\n\r\nlet cardId = 2000;\r\n\r\nconst TodoColumn = memo(({board, boardList, column, setNewBoard}) => {\r\n        const addImportantDone = (isImportant = false, importantCardId = null, isDone = false, doneCardId = null) => {\r\n            return boardList.map((boardListItem) => boardListItem.id === board.id\r\n                ? {\r\n                    ...boardListItem,\r\n                    columns: boardListItem.columns.map((columnsItem) => columnsItem.id === column.id\r\n                        ? importantCardId || doneCardId ? {\r\n                            ...columnsItem,\r\n                            cards: column.cards.map((card) => (importantCardId ? card.id === importantCardId : card.id === doneCardId)\r\n                                ? {    //Important Done\r\n                                    name: card.name,\r\n                                    id: card.id,\r\n                                    important: importantCardId ? isImportant : card.important,\r\n                                    done: doneCardId ? isDone : card.done\r\n                                }\r\n                                : card\r\n                            )\r\n                        } : { //Add New Card\r\n                            ...columnsItem,\r\n                            cards: [...columnsItem.cards, {\r\n                                name: inputCardValue,\r\n                                id: cardId++,\r\n                                important: false,\r\n                                done: false\r\n                            }]\r\n                        }\r\n                        : columnsItem\r\n                    )\r\n                }\r\n                : boardListItem\r\n            )\r\n        };\r\n\r\n        const [inputCardValue, setInputCardValue] = useState('');\r\n        const [addCard, setAddCard] = useState(false);\r\n        const [changeColumnValue, setColumnValue] = useState(column.name);\r\n        const [newColumnName, setNewColumnName] = useState(false);\r\n        const columnNameRef = useRef(null);\r\n        const columnCardNameRef = useRef(null);\r\n\r\n        useEffect(() => {\r\n            columnNameRef.current && columnNameRef.current.focus();\r\n            columnNameRef.current && columnNameRef.current.select();\r\n        }, [newColumnName]);\r\n        useEffect(() => {\r\n            columnCardNameRef.current && columnCardNameRef.current.focus();\r\n        }, [addCard]);\r\n\r\n\r\n        const addNewCard = (e) => {\r\n            if ((inputCardValue && inputCardValue.length > 0 && inputCardValue !== \" \" && e.key === \"Enter\")\r\n                || (inputCardValue && inputCardValue.length > 0 && inputCardValue !== \" \" && e.type === \"click\")\r\n                || (inputCardValue && inputCardValue.length > 0 && inputCardValue !== \" \" && e.type === \"blur\")) {\r\n                setNewBoard(addImportantDone());\r\n                setInputCardValue('');\r\n            }\r\n\r\n        };\r\n        const importantCard = (isImportant, importantCardId) => {\r\n            setNewBoard(addImportantDone(isImportant, importantCardId));\r\n        };\r\n        const cardDone = (isDone, doneCardId) => {\r\n            setNewBoard(addImportantDone(undefined, undefined, isDone, doneCardId))\r\n        };\r\n        const deleteCard = (id) => {\r\n            setNewBoard(\r\n                boardList.map((boardListItem) => boardListItem.id === board.id\r\n                    ? {\r\n                        ...boardListItem,\r\n                        columns: boardListItem.columns.map((columnsItem) => columnsItem.id === column.id\r\n                            ? {\r\n                                ...columnsItem,\r\n                                cards: columnsItem.cards.filter((card) => card.id !== id)\r\n                            }\r\n                            : columnsItem\r\n                        )\r\n                    }\r\n                    : boardListItem\r\n                )\r\n            );\r\n        };\r\n        const changeColumnName = (e, columnId) => {\r\n            if ((changeColumnValue && changeColumnValue.length > 0 && changeColumnValue !== \" \" && e.key === \"Enter\")\r\n                || (changeColumnValue && changeColumnValue.length > 0 && changeColumnValue !== \" \" && e.type === \"blur\")) {\r\n                boardList.find((boardListItem) => boardListItem.id === board.id).columns.find((column) => column.id === columnId).name = changeColumnValue;\r\n                setNewColumnName(false)\r\n            }\r\n        };\r\n\r\n\r\n        return (\r\n            <div className=\"columnWrapper\">\r\n                <div className=\"column\">\r\n                    <div className=\"columnHeader\">\r\n                        {!newColumnName && <h5 onClick={() => setNewColumnName(true)}>{column.name}</h5>}\r\n                        {newColumnName &&\r\n                        <textarea ref={columnNameRef} onKeyDown={(e) => changeColumnName(e, column.id)}\r\n                                  onBlur={(e) => changeColumnName(e, column.id)} value={changeColumnValue}\r\n                                  onChange={(e) => setColumnValue(e.target.value)}/>}\r\n                    </div>\r\n                    <Droppable droppableId={column.name+column.id}>\r\n                        {(provided) => {\r\n                            return (\r\n                                <ul\r\n                                    ref={provided.innerRef}\r\n                                    {...provided.droppableProps}\r\n                                    className=\"columnContent\"\r\n                                style={{height:`${(30.5*column.cards.length)+10}px`}}\r\n                                >\r\n                                    {column.cards && column.cards.map((card, index) => {\r\n                                            return (\r\n                                                <TodoCard key={card.id}\r\n                                                          index={index}\r\n                                                          card={card}\r\n                                                          deleteCard={deleteCard}\r\n                                                          importantCard={importantCard}\r\n                                                          cardDone={cardDone}/>\r\n                                            )\r\n                                        }\r\n                                    )}\r\n                                </ul>\r\n                            )\r\n                        }}\r\n                    </Droppable>\r\n                    <div className=\"columnFooter\">\r\n                        {!addCard && column.cards.length === 0 &&\r\n                        <div className=\"columnFooter__add\">\r\n                            <button onClick={() => setAddCard(true)}>Add</button>\r\n                        </div>}\r\n                        {!addCard && column.cards.length > 0 && <div className=\"columnFooter__add\">\r\n                            <button onClick={() => setAddCard(true)}>Add one more card</button>\r\n                        </div>}\r\n                        {addCard &&\r\n                        <div onKeyDown={(e) => addNewCard(e)} className=\"columnFooter__input\">\r\n                    <textarea\r\n                        onBlur={(e) => addNewCard(e)}\r\n                        ref={columnCardNameRef}\r\n                        value={inputCardValue}\r\n                        onChange={(e) => setInputCardValue(e.target.value.replace(/\\s+/g, ' '))}\r\n                        placeholder=\"Enter some title for this card\"/>\r\n                            <div className=\"columnFooter__addCard\">\r\n                                <button onClick={(e) => addNewCard(e)}>Add card</button>\r\n                                <span onClick={() => setAddCard(false)}>-</span>\r\n                            </div>\r\n                        </div>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n            ;\r\n    })\r\n;\r\n\r\nexport default TodoColumn;","import React, {useEffect, useRef} from 'react';\r\nimport TodoColumn from \"./TodoColumn\";\r\nimport {DragDropContext} from \"react-beautiful-dnd\";\r\n\r\nlet listId = 1000;\r\n\r\nconst TodoBoard = ({board, boardList, inputValue, setInputValue, setNewBoard, addList, setAddList, isActiveBoard}) => {\r\n    const newColumnNameRef = useRef();\r\n\r\n    useEffect(() => {\r\n        isActiveBoard(board.name)\r\n    }, []);\r\n    useEffect(() => {\r\n        newColumnNameRef.current && newColumnNameRef.current.focus();\r\n        newColumnNameRef.current && newColumnNameRef.current.select()\r\n    }, [addList]);\r\n\r\n\r\n    const addAnotherColumn = (e) => {\r\n        if ((inputValue.length > 0 && inputValue !== \" \" && e.key === \"Enter\") || (inputValue.length > 0 && inputValue !== \" \" && e.type === \"click\")) {\r\n            setNewBoard(boardList.map((item) => item.id === board.id\r\n                ? {\r\n                    ...item,\r\n                    columns: [...item.columns, {name: inputValue, id: listId++, cards: []}]\r\n                }\r\n                : item\r\n            ));\r\n            setInputValue(\"\");\r\n        }\r\n\r\n    };\r\n    const handleDragEnd = ({destination, source}) => {\r\n        if (!destination) {\r\n            return;\r\n        }\r\n        if (destination.index === source.index && destination.droppableId === source.droppableId) {\r\n            return;\r\n        }\r\n        const itemCopy = board.columns.find((column) => column.name + column.id === source.droppableId).cards[source.index];\r\n        setNewBoard(prev => {\r\n            prev.map((b) => b.id === board.id\r\n                ? {\r\n                    ...b,\r\n                    columns: b.columns.find((column) => column.name + column.id === source.droppableId).cards.splice(source.index, 1)\r\n                }\r\n                : b\r\n            );\r\n            prev.map((b) => b.id === board.id\r\n                ? {\r\n                    ...b,\r\n                    columns: b.columns.find((column) => column.name + column.id === destination.droppableId).cards.splice(destination.index, 0,itemCopy)\r\n                }\r\n                : b\r\n            );\r\n            return prev\r\n        });\r\n    };\r\n    return (\r\n        <div className=\"todoContent\">\r\n            <DragDropContext onDragEnd={handleDragEnd}>\r\n                {board.columns && board.columns.map((column) => {\r\n                        return (\r\n                            <TodoColumn key={column.id} board={board}\r\n                                        boardList={boardList}\r\n                                        column={column} setNewBoard={setNewBoard}/>\r\n                        )\r\n                    }\r\n                )}\r\n            </DragDropContext>\r\n            {!addList && board.columns.length === 0 &&\r\n            <div onClick={() => setAddList(true)} className=\"todoContent__add\">\r\n                Add new list\r\n            </div>}\r\n            {!addList && board.columns.length > 0 &&\r\n            <div onClick={() => setAddList(true)} className=\"todoContent__add\">\r\n                Add another one column\r\n            </div>}\r\n            {addList && <div className=\"todoContent__input\">\r\n                <input placeholder=\"Enter a list title\"\r\n                       ref={newColumnNameRef}\r\n                       onKeyDown={(e) => addAnotherColumn(e)}\r\n                       value={inputValue}\r\n                       onChange={(e) => setInputValue(e.target.value.replace(/\\s+/g, ' '))} type=\"text\"/>\r\n                <div>\r\n                    <button onClick={(e) => addAnotherColumn(e)}>Add list</button>\r\n                </div>\r\n            </div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoBoard;","import React, {useEffect, useRef, useState} from 'react';\r\nimport './style.scss'\r\nimport TodoBoard from \"./TodoBoard\";\r\nimport {Redirect, Route, Switch} from \"react-router\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {ShowBoards} from \"../../SVG/SVG\";\r\n\r\nlet boardId = 1;\r\n\r\nconst Todo = () => {\r\n    const [showBoards, setShowBoard] = useState(false);\r\n    const [boardNameValue, setBoardNameValue] = useState('');\r\n    const [board, setBoard] = useState(false);\r\n    const [boardList, setNewBoard] = useState([]);\r\n    const [activeBoardName, setActiveBoardName] = useState('Todo');\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [addList, setAddList] = useState(false);\r\n    const createCardInputRef = useRef();\r\n\r\n    useEffect(() => {\r\n        createCardInputRef.current && createCardInputRef.current.select()\r\n    }, [board]);\r\n\r\n    const addNewBoard = (e) => {\r\n        if ((boardNameValue.length > 0 && boardNameValue !== \" \" && e.key === \"Enter\") || (boardNameValue.length > 0 && boardNameValue !== \" \" && e.type === \"click\")) {\r\n            setNewBoard([...boardList, {name: boardNameValue, id: boardId++, columns: []}]);\r\n            setBoard(false);\r\n            setBoardNameValue('')\r\n        }\r\n    };\r\n\r\n    const closeCreateInput = (e) => {\r\n        if (e.target.className !== \"todoHeader__boards\" && e.target.tagName !== \"IMG\") {\r\n            setShowBoard(false);\r\n        }\r\n        if (e.target.className === \"todo\" || e.target.className === \"todoContent\" || e.target.className === \"todoHeader__name\" || e.target.className === \"todoContent__boardName\") {\r\n            setBoard(false);\r\n            setAddList(false);\r\n            setBoardNameValue(boardNameValue);\r\n        }\r\n    };\r\n    const isActiveBoard = (boardName) => {\r\n        setActiveBoardName(boardName)\r\n    };\r\n\r\n    return (\r\n            <div onClick={(e) => closeCreateInput(e)} className=\"todo\">\r\n                <div className=\"todoHeader\">\r\n                    {showBoards\r\n                        ? <div className=\"todoHeader__boardsList\">{boardList?.map((board) => (\r\n                            <Link key={board.id}\r\n                                  to={`/todo/${board.name.replace(/\\s+/g, '').toLowerCase()}${board.id}`}>\r\n                                <span className=\"todoHeader__board\">{board.name}</span>\r\n                            </Link>))}\r\n                        </div>\r\n                        : <div>\r\n                            <div className=\"todoHeader__title\">\r\n                            <span className=\"todoHeader__boards\"\r\n                                  onClick={() => boardList.length > 0 && setShowBoard(true)}>\r\n                                boards\r\n                                <ShowBoards height={\"15px\"} width={\"15px\"}/>\r\n                            </span>\r\n                                <h1>{activeBoardName}</h1>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    <div className=\"todoHeader__name\">\r\n                        {board\r\n                            ? <div className=\"todoHeader__addNewBoard\">\r\n                                <input type=\"text\"\r\n                                       ref={createCardInputRef}\r\n                                       autoFocus={true}\r\n                                       value={boardNameValue}\r\n                                       onKeyDown={(e) => addNewBoard(e)}\r\n                                       onChange={(e) => setBoardNameValue(e.target.value.replace(/\\s+/g, ' '))}\r\n                                />\r\n                                <button onClick={(e) => addNewBoard(e)}>Create board</button>\r\n                            </div>\r\n                            : <span onClick={() => setBoard(true)} className=\"todoHeader__add\">Create Board</span>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <Switch>\r\n                    {boardList.map((board) => <Route key={board.id}\r\n                                                     path={`/todo/${board.name.replace(/\\s+/g, '').toLowerCase()}${board.id}`}\r\n                                                     render={() => <TodoBoard\r\n                                                         board={board} boardList={boardList}\r\n                                                         inputValue={inputValue} setInputValue={setInputValue}\r\n                                                         setNewBoard={setNewBoard}\r\n                                                         addList={addList} setAddList={setAddList}\r\n                                                         isActiveBoard={isActiveBoard}\r\n                                                     />}/>)}\r\n                    {boardList.length === 1 &&\r\n                    <Redirect to={`/todo/${boardList[0].name.replace(/\\s+/g, '').toLowerCase()}${boardList[0].id}`}/>}\r\n                </Switch>\r\n            </div>\r\n    );\r\n};\r\n\r\nexport default Todo;","import React from 'react';\r\nimport './Style.scss'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst MainPage = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <div className=\"mainLogo\">\r\n                <img src=\"https://res.cloudinary.com/minak/image/upload/v1595687487/GroWitHead/GroWitHead_hqtaos.png\" alt=\"Logo\"/>\r\n            </div>\r\n            <div className=\"mainList\">\r\n                <Link to={'/learning'}>\r\n                    <div className=\"mainList__choice learning\">\r\n                        Learning\r\n                    </div>\r\n                </Link>\r\n                <Link to={'/todo'}>\r\n                    <div className=\"mainList__choice todo\">\r\n                        Todo\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainPage;","import React from 'react';\r\nimport {Route, Switch} from \"react-router\";\r\nimport './Style.scss'\r\n\r\nimport Learning from \"../Learning/Learning\";\r\nimport Todo from \"../Todo/Todo\";\r\nimport MainPage from \"../MainPage/MainPage\";\r\n\r\nconst App = () => {\r\n\r\n    return (\r\n        <div className=\"app\">\r\n                    <Switch>\r\n                        <Route path={'/'} component={MainPage} exact/>\r\n                        <Route path={'/learning/:category?/:text?'} component={Learning}/>\r\n                        <Route path={'/todo/:name?'} component={Todo}/>\r\n                    </Switch>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nimport App from \"./Components/App/App\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <App/>\n    </BrowserRouter>,\ndocument.getElementById('root')\n)\n;\n"],"sourceRoot":""}